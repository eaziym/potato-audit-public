{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs\n}) {\n  _s();\n  const imageRef = useRef(null);\n  const [scaleFactor, setScaleFactor] = useState(1);\n  useEffect(() => {\n    const handleResize = () => {\n      if (imageRef.current) {\n        const {\n          naturalWidth\n        } = imageRef.current;\n        const displayWidth = imageRef.current.clientWidth;\n        setScaleFactor(displayWidth / naturalWidth);\n      }\n    };\n\n    // Calculate the scale factor as soon as the image is loaded\n    const loadImage = new Image();\n    loadImage.src = imagePath;\n    loadImage.onload = () => handleResize();\n\n    // Adjust scale factor on window resize\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [imagePath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      children: blobs.map((blob, index) => {\n        const {\n          x,\n          y,\n          width,\n          height\n        } = blob.coordinates; // Assuming this is the correct structure\n        const scaledX = x * scaleFactor;\n        const scaledY = y * scaleFactor;\n        const scaledWidth = width * scaleFactor;\n        const scaledHeight = height * scaleFactor;\n        return /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: scaledX,\n          y: scaledY,\n          width: scaledWidth,\n          height: scaledHeight,\n          fill: \"none\",\n          stroke: \"red\",\n          strokeWidth: \"2\",\n          onClick: () => console.log(`Box ${index} clicked`),\n          style: {\n            cursor: 'pointer',\n            pointerEvents: 'all'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(InteractiveAnnotatedImage, \"C0zz6AuGgoagwgcOFV4MKA7hTOI=\");\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","InteractiveAnnotatedImage","imagePath","blobs","_s","imageRef","scaleFactor","setScaleFactor","handleResize","current","naturalWidth","displayWidth","clientWidth","loadImage","Image","src","onload","window","addEventListener","removeEventListener","style","position","display","children","ref","alt","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","top","left","width","height","map","blob","index","x","y","coordinates","scaledX","scaledY","scaledWidth","scaledHeight","fill","stroke","strokeWidth","onClick","console","log","cursor","pointerEvents","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs }) {\r\n    const imageRef = useRef(null);\r\n    const [scaleFactor, setScaleFactor] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (imageRef.current) {\r\n                const { naturalWidth } = imageRef.current;\r\n                const displayWidth = imageRef.current.clientWidth;\r\n                setScaleFactor(displayWidth / naturalWidth);\r\n            }\r\n        };\r\n\r\n        // Calculate the scale factor as soon as the image is loaded\r\n        const loadImage = new Image();\r\n        loadImage.src = imagePath;\r\n        loadImage.onload = () => handleResize();\r\n\r\n        // Adjust scale factor on window resize\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [imagePath]);\r\n\r\n    return (\r\n        <div style={{ position: 'relative', display: 'inline-block' }}>\r\n            <img ref={imageRef} src={imagePath} alt=\"Annotated Invoice\" style={{ maxWidth: '100%' }} />\r\n            <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\r\n                {blobs.map((blob, index) => {\r\n                    const { x, y, width, height } = blob.coordinates; // Assuming this is the correct structure\r\n                    const scaledX = x * scaleFactor;\r\n                    const scaledY = y * scaleFactor;\r\n                    const scaledWidth = width * scaleFactor;\r\n                    const scaledHeight = height * scaleFactor;\r\n\r\n                    return (\r\n                        <rect key={index} x={scaledX} y={scaledY} width={scaledWidth} height={scaledHeight}\r\n                            fill=\"none\" stroke=\"red\" strokeWidth=\"2\" onClick={() => console.log(`Box ${index} clicked`)}\r\n                            style={{ cursor: 'pointer', pointerEvents: 'all' }} />\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InteractiveAnnotatedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}