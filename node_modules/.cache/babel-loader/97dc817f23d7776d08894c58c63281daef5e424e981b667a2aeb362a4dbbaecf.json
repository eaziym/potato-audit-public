{"ast":null,"code":"// App.js\nimport React,{useEffect,useState,useCallback}from'react';import{BrowserRouter as Router,Routes,Route,Link}from'react-router-dom';import StaffBookingSystem from'./StaffBookingSystem';// Make sure to import your new component\nimport axios from'axios';import UploadForm from'./UploadForm';import FetchAnnouncementsForm from'./FetchAnnouncementsForm';import DirectoryInputForm from'./DirectoryInputForm';import InteractiveAnnotatedImage from'./InteractiveAnnotatedImage';import DataTable from'./DataTable';import'./App.css';import logo from'./favicon.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[processedImageInfo,setProcessedImageInfo]=useState({filename:'',blobs:[],mergedTexts:[]});const[selectedPairs,setSelectedPairs]=useState([]);const[directoryPath,setDirectoryPath]=useState('');// Add directoryPath to state\nconst[downloadDirectory,setDownloadDirectory]=useState('');// New state for download directory input\nconst[downloadKAMDirectory,setDownloadKAMDirectory]=useState('');// New state for download directory input\nconst[labelVariations,setLabelVariations]=useState({});const[isProcessing,setIsProcessing]=useState(false);const[progress,setProgress]=useState({current:0,total:1,completed:false});const[processedData,setProcessedData]=useState([]);const[companies,setCompanies]=useState('');// State for storing the list of companies\nconst[announcements,setAnnouncements]=useState([]);// State for storing fetched announcements\nconst handleFetchProcessReports=()=>{axios.post('/fetch-process-reports',{downloadDir:downloadKAMDirectory}).then(response=>{alert('Reports fetched and processed successfully.');}).catch(error=>{console.error('Error fetching and processing reports:',error);alert('Failed to fetch and process reports.');});};const fetchProgress=useCallback(()=>{axios.get('/progress').then(response=>{const{current,total}=response.data;setProgress(prevProgress=>({...prevProgress,current,total,completed:current>=total}));if(current>=total){setIsProcessing(false);}}).catch(error=>console.error(\"Failed to fetch progress\",error));},[]);useEffect(()=>{let interval=null;if(isProcessing){interval=setInterval(fetchProgress,1000);}return()=>clearInterval(interval);},[isProcessing,fetchProgress]);const handleDirectorySubmit=async directoryPath=>{try{setDirectoryPath(directoryPath);// Adjust the endpoint as necessary. This should match your Flask route.\nconst response=await axios.post('/process-directory',{directory:directoryPath});// Assuming the response contains both the filename and blobs data\n// Update this according to the actual structure of your response\n// Assuming your Flask endpoint now also returns merged texts along with blobs\nconst{filename,blobs,mergedTexts}=response.data;setProcessedImageInfo({filename,blobs,mergedTexts});// Update state with filename, blobs, and mergedTexts\n}catch(error){console.error(\"Error processing directory:\",error);}};const processedImagePath=processedImageInfo.filename?\"/processed-images/\".concat(processedImageInfo.filename):'';console.log(\"Processed Image Path:\",processedImagePath);console.log(\"Processed Image Info:\",processedImageInfo);console.log(\"Selected Pairs:\",selectedPairs);console.log(\"Blobs:\",processedImageInfo.blobs);console.log(\"Merged Texts:\",processedImageInfo.mergedTexts);const handleProcessSelection=async()=>{setIsProcessing(true);// Assuming `selectedPairs` contains the indexes of selected pairs,\n// and `processedImageInfo.blobs` contains the blobs data\ntry{const response=await axios.post('/process-selected-pairs',{directoryPath,selectedPairs,blobs:processedImageInfo.blobs,mergedTexts:processedImageInfo.mergedTexts,labelVariations// Send label variations to the backend\n});console.log(response.data);// Handle response as needed\nfetchProgress();}catch(error){console.error(\"Error sending selections:\",error);setIsProcessing(false);}};useEffect(()=>{if(progress.completed&&directoryPath){const queryParams=new URLSearchParams({directory:directoryPath});axios.get(\"/get-processed-info?\".concat(queryParams)).then(response=>{setProcessedData(response.data);});}},[progress.completed,directoryPath]);// Dynamically generate columns from processedData\nconst columns=React.useMemo(()=>{if(processedData.length>0){let cols=Object.keys(processedData[0]).map(key=>({Header:key.charAt(0).toUpperCase()+key.slice(1),accessor:key}));// Find the 'File URL' column\nconst urlColumn=cols.find(c=>c.accessor==='File URL');// Filter out the 'File URL' column from the original columns\ncols=cols.filter(c=>c.accessor!=='File URL');// Add the 'File URL' column at the end\ncols.push(urlColumn);return cols;}return[];},[processedData]);const fetchAnnouncementsForToday=async()=>{alert('Fetching announcements for today...');try{const response=await axios.post('/fetch-todays-announcements',{companies:companies,downloadDir:downloadDirectory// Sending download directory to the backend\n});setAnnouncements(response.data);// Assuming the endpoint returns the list of announcements\nconsole.log(\"Fetched Announcements:\",announcements);}catch(error){console.error(\"Error fetching announcements:\",error);}};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/booking\",children:\"Staff Booking\"})})]})}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Potato Audit\"})]}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(UploadForm,{}),/*#__PURE__*/_jsx(FetchAnnouncementsForm,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{value:companies,onChange:e=>setCompanies(e.target.value),placeholder:\"Enter companies separated by comma\",rows:\"4\"// Makes the textarea bigger\n,style:{width:'100%',margin:'10px 0'}// Ensures the textarea is fully visible and comfortably spaced\n})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:downloadDirectory,onChange:e=>setDownloadDirectory(e.target.value),placeholder:\"Enter download directory path\",style:{width:'100%',margin:'10px 0'}// Ensures the input is fully visible and comfortably spaced\n}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchAnnouncementsForToday,children:\"Fetch Today's Announcements\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:downloadKAMDirectory,onChange:e=>setDownloadKAMDirectory(e.target.value),placeholder:\"Enter download directory path\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFetchProcessReports,children:\"Fetch and Process KAM Reports\"})]}),/*#__PURE__*/_jsx(DirectoryInputForm,{onDirectorySubmit:handleDirectorySubmit}),/*#__PURE__*/_jsx(\"div\",{className:\"invoice-image-container\",children:processedImageInfo.filename&&/*#__PURE__*/_jsx(InteractiveAnnotatedImage,{imagePath:\"/processed-images/\".concat(processedImageInfo.filename),blobs:processedImageInfo.blobs,mergedTexts:processedImageInfo.mergedTexts,onSelectionComplete:setSelectedPairs,onLabelVariationsUpdate:setLabelVariations// Handle label variations\n})}),processedImageInfo.filename&&selectedPairs.length>0&&/*#__PURE__*/_jsx(\"button\",{onClick:handleProcessSelection,children:\"Process Selections\"}),(progress.current>0||progress.completed)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Processing Progress\"}),/*#__PURE__*/_jsx(\"progress\",{value:progress.current,max:progress.total}),/*#__PURE__*/_jsxs(\"p\",{children:[progress.current,\" of \",progress.total,\" files processed\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:progress.completed&&/*#__PURE__*/_jsx(DataTable,{columns:columns,data:processedData})})]})}),/*#__PURE__*/_jsx(Route,{path:\"/booking\",element:/*#__PURE__*/_jsx(StaffBookingSystem,{})})]})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","useCallback","BrowserRouter","Router","Routes","Route","Link","StaffBookingSystem","axios","UploadForm","FetchAnnouncementsForm","DirectoryInputForm","InteractiveAnnotatedImage","DataTable","logo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","processedImageInfo","setProcessedImageInfo","filename","blobs","mergedTexts","selectedPairs","setSelectedPairs","directoryPath","setDirectoryPath","downloadDirectory","setDownloadDirectory","downloadKAMDirectory","setDownloadKAMDirectory","labelVariations","setLabelVariations","isProcessing","setIsProcessing","progress","setProgress","current","total","completed","processedData","setProcessedData","companies","setCompanies","announcements","setAnnouncements","handleFetchProcessReports","post","downloadDir","then","response","alert","catch","error","console","fetchProgress","get","data","prevProgress","interval","setInterval","clearInterval","handleDirectorySubmit","directory","processedImagePath","concat","log","handleProcessSelection","queryParams","URLSearchParams","columns","useMemo","length","cols","Object","keys","map","key","Header","charAt","toUpperCase","slice","accessor","urlColumn","find","c","filter","push","fetchAnnouncementsForToday","children","className","to","src","alt","path","element","value","onChange","e","target","placeholder","rows","style","width","margin","type","onClick","onDirectorySubmit","imagePath","onSelectionComplete","onLabelVariationsUpdate","max"],"sources":["/Users/msy/Desktop/Shiyao/repo/potato-audit/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport StaffBookingSystem from './StaffBookingSystem'; // Make sure to import your new component\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport DataTable from './DataTable';\nimport './App.css';\nimport logo from './favicon.png'; \n\n\n\nfunction App() {\n    const [processedImageInfo, setProcessedImageInfo] = useState({ filename: '', blobs: [], mergedTexts: []});\n    const [selectedPairs, setSelectedPairs] = useState([]);\n    const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n    const [downloadDirectory, setDownloadDirectory] = useState(''); // New state for download directory input\n    const [downloadKAMDirectory, setDownloadKAMDirectory] = useState(''); // New state for download directory input\n    const [labelVariations, setLabelVariations] = useState({});\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [progress, setProgress] = useState({ current: 0, total: 1, completed: false });\n    const [processedData, setProcessedData] = useState([]);\n    const [companies, setCompanies] = useState(''); // State for storing the list of companies\n    const [announcements, setAnnouncements] = useState([]); // State for storing fetched announcements\n\n\n    const handleFetchProcessReports = () => {\n        axios.post('/fetch-process-reports', {\n            downloadDir: downloadKAMDirectory\n        }).then(response => {\n            alert('Reports fetched and processed successfully.');\n        }).catch(error => {\n            console.error('Error fetching and processing reports:', error);\n            alert('Failed to fetch and process reports.');\n        });\n    };\n\n    const fetchProgress = useCallback(() => {\n        axios.get('/progress')\n            .then(response => {\n                const { current, total } = response.data;\n                setProgress(prevProgress => ({\n                  ...prevProgress,\n                  current,\n                  total,\n                  completed: current >= total\n                }));\n                if (current >= total) {\n                    setIsProcessing(false);\n                }\n            })\n            .catch(error => console.error(\"Failed to fetch progress\", error));\n    }, []);\n\n\n    useEffect(() => {\n        let interval = null;\n        if (isProcessing) {\n            interval = setInterval(fetchProgress, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [isProcessing, fetchProgress]);\n\n\n\n    const handleDirectorySubmit = async (directoryPath) => {\n        try {\n            setDirectoryPath(directoryPath);\n\n            // Adjust the endpoint as necessary. This should match your Flask route.\n            const response = await axios.post('/process-directory', { directory: directoryPath });\n            // Assuming the response contains both the filename and blobs data\n            // Update this according to the actual structure of your response\n            // Assuming your Flask endpoint now also returns merged texts along with blobs\n            const { filename, blobs, mergedTexts } = response.data; \n            setProcessedImageInfo({ filename, blobs, mergedTexts }); // Update state with filename, blobs, and mergedTexts\n        } catch (error) {\n            console.error(\"Error processing directory:\", error);\n        }\n    };\n\n    const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n    console.log(\"Processed Image Path:\", processedImagePath);\n    console.log(\"Processed Image Info:\", processedImageInfo);\n    \n    console.log(\"Selected Pairs:\", selectedPairs);\n    console.log(\"Blobs:\", processedImageInfo.blobs);\n    console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n\n    const handleProcessSelection = async () => {\n        setIsProcessing(true);\n\n        // Assuming `selectedPairs` contains the indexes of selected pairs,\n        // and `processedImageInfo.blobs` contains the blobs data\n        try {\n            const response = await axios.post('/process-selected-pairs', {\n                directoryPath,\n                selectedPairs,\n                blobs: processedImageInfo.blobs,\n                mergedTexts: processedImageInfo.mergedTexts, \n                labelVariations, // Send label variations to the backend\n\n            });\n            console.log(response.data); // Handle response as needed\n            fetchProgress();\n\n        } catch (error) {\n            console.error(\"Error sending selections:\", error);\n            setIsProcessing(false);\n\n        }\n    };\n    \n\n    useEffect(() => {\n        if (progress.completed && directoryPath) {\n            const queryParams = new URLSearchParams({ directory: directoryPath });\n            axios.get(`/get-processed-info?${queryParams}`).then((response) => {\n                setProcessedData(response.data);\n            });\n        }\n    }, [progress.completed, directoryPath]);\n    \n    \n      // Dynamically generate columns from processedData\n      const columns = React.useMemo(() => {\n        if (processedData.length > 0) {\n            let cols = Object.keys(processedData[0]).map(key => ({\n              Header: key.charAt(0).toUpperCase() + key.slice(1),\n              accessor: key,\n            }));\n        \n            // Find the 'File URL' column\n            const urlColumn = cols.find(c => c.accessor === 'File URL');\n            // Filter out the 'File URL' column from the original columns\n            cols = cols.filter(c => c.accessor !== 'File URL');\n            // Add the 'File URL' column at the end\n            cols.push(urlColumn);\n            \n            return cols;\n          }\n          return [];\n      }, [processedData]);\n\n      const fetchAnnouncementsForToday = async () => {\n        alert('Fetching announcements for today...');\n        try {\n            const response = await axios.post('/fetch-todays-announcements', {\n                companies: companies,\n                downloadDir: downloadDirectory // Sending download directory to the backend\n            });\n            setAnnouncements(response.data); // Assuming the endpoint returns the list of announcements\n            console.log(\"Fetched Announcements:\", announcements);\n        } catch (error) {\n            console.error(\"Error fetching announcements:\", error);\n        }\n    };\n\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <header>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/booking\">Staff Booking</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1>Potato Audit</h1>\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={\n                        <>\n \n                        <UploadForm />\n                        <FetchAnnouncementsForm />\n\n                        {/* Text area for entering multiple companies */}\n                        <div>\n                            <textarea\n                                value={companies}\n                                onChange={(e) => setCompanies(e.target.value)}\n                                placeholder=\"Enter companies separated by comma\"\n                                rows=\"4\" // Makes the textarea bigger\n                                style={{ width: '100%', margin: '10px 0' }} // Ensures the textarea is fully visible and comfortably spaced\n                            ></textarea>\n                        </div>\n\n                        {/* Input for specifying download directory */}\n                        <div>\n                            <input\n                                type=\"text\"\n                                value={downloadDirectory}\n                                onChange={(e) => setDownloadDirectory(e.target.value)}\n                                placeholder=\"Enter download directory path\"\n                                style={{ width: '100%', margin: '10px 0' }} // Ensures the input is fully visible and comfortably spaced\n                            />\n                            <button onClick={fetchAnnouncementsForToday}>Fetch Today's Announcements</button>\n                        </div>\n\n                        {/* KAM Download Directory Input */}\n                        <div>\n                            <input\n                                type=\"text\"\n                                value={downloadKAMDirectory}\n                                onChange={(e) => setDownloadKAMDirectory(e.target.value)}\n                                placeholder=\"Enter download directory path\"\n                            />\n                            <button onClick={handleFetchProcessReports}>Fetch and Process KAM Reports</button>\n                        </div>\n\n                        <DirectoryInputForm onDirectorySubmit={handleDirectorySubmit} />\n\n                        <div className=\"invoice-image-container\">\n                            {processedImageInfo.filename && (\n                                <InteractiveAnnotatedImage\n                                    imagePath={`/processed-images/${processedImageInfo.filename}`}\n                                    blobs={processedImageInfo.blobs}\n                                    mergedTexts={processedImageInfo.mergedTexts}\n                                    onSelectionComplete={setSelectedPairs}\n                                    onLabelVariationsUpdate={setLabelVariations} // Handle label variations\n                                    \n                                />\n                            )}\n                        </div>\n                        \n                        {processedImageInfo.filename && selectedPairs.length > 0 && (\n                        <button onClick={handleProcessSelection}>Process Selections</button>\n                        )}\n\n                        {(progress.current > 0 || progress.completed) && (\n                            <>\n                                <h2>Processing Progress</h2>\n                                <progress value={progress.current} max={progress.total}></progress>\n                                <p>{progress.current} of {progress.total} files processed</p>\n                            </>\n                        )}\n\n                    <div className=\"table-container\">\n                        {progress.completed && (\n                            <DataTable columns={columns} data={processedData} />\n                        )}\n                    </div>\n\n                    </>\n                    } />\n                    <Route path=\"/booking\" element={<StaffBookingSystem />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,IAAI,KAAQ,kBAAkB,CAC/E,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CAAE;AACvD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,sBAAsB,KAAM,0BAA0B,CAC7D,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CACrD,MAAO,CAAAC,yBAAyB,KAAM,6BAA6B,CACnE,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,WAAW,CAClB,MAAO,CAAAC,IAAI,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAIjC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGvB,QAAQ,CAAC,CAAEwB,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAC,CAAC,CACzG,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC6B,aAAa,CAAEC,gBAAgB,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxD,KAAM,CAAC+B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChE,KAAM,CAACiC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGlC,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtE,KAAM,CAACmC,eAAe,CAAEC,kBAAkB,CAAC,CAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAACqC,YAAY,CAAEC,eAAe,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACuC,QAAQ,CAAEC,WAAW,CAAC,CAAGxC,QAAQ,CAAC,CAAEyC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CACpF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC8C,SAAS,CAAEC,YAAY,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChD,KAAM,CAACgD,aAAa,CAAEC,gBAAgB,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CAAE;AAGxD,KAAM,CAAAkD,yBAAyB,CAAGA,CAAA,GAAM,CACpC1C,KAAK,CAAC2C,IAAI,CAAC,wBAAwB,CAAE,CACjCC,WAAW,CAAEnB,oBACjB,CAAC,CAAC,CAACoB,IAAI,CAACC,QAAQ,EAAI,CAChBC,KAAK,CAAC,6CAA6C,CAAC,CACxD,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9DF,KAAK,CAAC,sCAAsC,CAAC,CACjD,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAI,aAAa,CAAG1D,WAAW,CAAC,IAAM,CACpCO,KAAK,CAACoD,GAAG,CAAC,WAAW,CAAC,CACjBP,IAAI,CAACC,QAAQ,EAAI,CACd,KAAM,CAAEb,OAAO,CAAEC,KAAM,CAAC,CAAGY,QAAQ,CAACO,IAAI,CACxCrB,WAAW,CAACsB,YAAY,GAAK,CAC3B,GAAGA,YAAY,CACfrB,OAAO,CACPC,KAAK,CACLC,SAAS,CAAEF,OAAO,EAAIC,KACxB,CAAC,CAAC,CAAC,CACH,GAAID,OAAO,EAAIC,KAAK,CAAE,CAClBJ,eAAe,CAAC,KAAK,CAAC,CAC1B,CACJ,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAC,CACzE,CAAC,CAAE,EAAE,CAAC,CAGN1D,SAAS,CAAC,IAAM,CACZ,GAAI,CAAAgE,QAAQ,CAAG,IAAI,CACnB,GAAI1B,YAAY,CAAE,CACd0B,QAAQ,CAAGC,WAAW,CAACL,aAAa,CAAE,IAAI,CAAC,CAC/C,CACA,MAAO,IAAMM,aAAa,CAACF,QAAQ,CAAC,CACxC,CAAC,CAAE,CAAC1B,YAAY,CAAEsB,aAAa,CAAC,CAAC,CAIjC,KAAM,CAAAO,qBAAqB,CAAG,KAAO,CAAArC,aAAa,EAAK,CACnD,GAAI,CACAC,gBAAgB,CAACD,aAAa,CAAC,CAE/B;AACA,KAAM,CAAAyB,QAAQ,CAAG,KAAM,CAAA9C,KAAK,CAAC2C,IAAI,CAAC,oBAAoB,CAAE,CAAEgB,SAAS,CAAEtC,aAAc,CAAC,CAAC,CACrF;AACA;AACA;AACA,KAAM,CAAEL,QAAQ,CAAEC,KAAK,CAAEC,WAAY,CAAC,CAAG4B,QAAQ,CAACO,IAAI,CACtDtC,qBAAqB,CAAC,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,WAAY,CAAC,CAAC,CAAE;AAC7D,CAAE,MAAO+B,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACvD,CACJ,CAAC,CAED,KAAM,CAAAW,kBAAkB,CAAG9C,kBAAkB,CAACE,QAAQ,sBAAA6C,MAAA,CAAwB/C,kBAAkB,CAACE,QAAQ,EAAK,EAAE,CAChHkC,OAAO,CAACY,GAAG,CAAC,uBAAuB,CAAEF,kBAAkB,CAAC,CACxDV,OAAO,CAACY,GAAG,CAAC,uBAAuB,CAAEhD,kBAAkB,CAAC,CAExDoC,OAAO,CAACY,GAAG,CAAC,iBAAiB,CAAE3C,aAAa,CAAC,CAC7C+B,OAAO,CAACY,GAAG,CAAC,QAAQ,CAAEhD,kBAAkB,CAACG,KAAK,CAAC,CAC/CiC,OAAO,CAACY,GAAG,CAAC,eAAe,CAAEhD,kBAAkB,CAACI,WAAW,CAAC,CAE5D,KAAM,CAAA6C,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACvCjC,eAAe,CAAC,IAAI,CAAC,CAErB;AACA;AACA,GAAI,CACA,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAA9C,KAAK,CAAC2C,IAAI,CAAC,yBAAyB,CAAE,CACzDtB,aAAa,CACbF,aAAa,CACbF,KAAK,CAAEH,kBAAkB,CAACG,KAAK,CAC/BC,WAAW,CAAEJ,kBAAkB,CAACI,WAAW,CAC3CS,eAAiB;AAErB,CAAC,CAAC,CACFuB,OAAO,CAACY,GAAG,CAAChB,QAAQ,CAACO,IAAI,CAAC,CAAE;AAC5BF,aAAa,CAAC,CAAC,CAEnB,CAAE,MAAOF,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDnB,eAAe,CAAC,KAAK,CAAC,CAE1B,CACJ,CAAC,CAGDvC,SAAS,CAAC,IAAM,CACZ,GAAIwC,QAAQ,CAACI,SAAS,EAAId,aAAa,CAAE,CACrC,KAAM,CAAA2C,WAAW,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAEN,SAAS,CAAEtC,aAAc,CAAC,CAAC,CACrErB,KAAK,CAACoD,GAAG,wBAAAS,MAAA,CAAwBG,WAAW,CAAE,CAAC,CAACnB,IAAI,CAAEC,QAAQ,EAAK,CAC/DT,gBAAgB,CAACS,QAAQ,CAACO,IAAI,CAAC,CACnC,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAACtB,QAAQ,CAACI,SAAS,CAAEd,aAAa,CAAC,CAAC,CAGrC;AACA,KAAM,CAAA6C,OAAO,CAAG5E,KAAK,CAAC6E,OAAO,CAAC,IAAM,CAClC,GAAI/B,aAAa,CAACgC,MAAM,CAAG,CAAC,CAAE,CAC1B,GAAI,CAAAC,IAAI,CAAGC,MAAM,CAACC,IAAI,CAACnC,aAAa,CAAC,CAAC,CAAC,CAAC,CAACoC,GAAG,CAACC,GAAG,GAAK,CACnDC,MAAM,CAAED,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGH,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,CAClDC,QAAQ,CAAEL,GACZ,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAAM,SAAS,CAAGV,IAAI,CAACW,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACH,QAAQ,GAAK,UAAU,CAAC,CAC3D;AACAT,IAAI,CAAGA,IAAI,CAACa,MAAM,CAACD,CAAC,EAAIA,CAAC,CAACH,QAAQ,GAAK,UAAU,CAAC,CAClD;AACAT,IAAI,CAACc,IAAI,CAACJ,SAAS,CAAC,CAEpB,MAAO,CAAAV,IAAI,CACb,CACA,MAAO,EAAE,CACb,CAAC,CAAE,CAACjC,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAgD,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC7CrC,KAAK,CAAC,qCAAqC,CAAC,CAC5C,GAAI,CACA,KAAM,CAAAD,QAAQ,CAAG,KAAM,CAAA9C,KAAK,CAAC2C,IAAI,CAAC,6BAA6B,CAAE,CAC7DL,SAAS,CAAEA,SAAS,CACpBM,WAAW,CAAErB,iBAAkB;AACnC,CAAC,CAAC,CACFkB,gBAAgB,CAACK,QAAQ,CAACO,IAAI,CAAC,CAAE;AACjCH,OAAO,CAACY,GAAG,CAAC,wBAAwB,CAAEtB,aAAa,CAAC,CACxD,CAAE,MAAOS,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC,CAGD,mBACIzC,IAAA,CAACb,MAAM,EAAA0F,QAAA,cACH3E,KAAA,QAAK4E,SAAS,CAAC,KAAK,CAAAD,QAAA,eAChB3E,KAAA,WAAA2E,QAAA,eACI7E,IAAA,QAAA6E,QAAA,cACI3E,KAAA,OAAA2E,QAAA,eACI7E,IAAA,OAAA6E,QAAA,cACI7E,IAAA,CAACV,IAAI,EAACyF,EAAE,CAAC,GAAG,CAAAF,QAAA,CAAC,MAAI,CAAM,CAAC,CACxB,CAAC,cACL7E,IAAA,OAAA6E,QAAA,cACI7E,IAAA,CAACV,IAAI,EAACyF,EAAE,CAAC,UAAU,CAAAF,QAAA,CAAC,eAAa,CAAM,CAAC,CACxC,CAAC,EACL,CAAC,CACJ,CAAC,cACN7E,IAAA,QAAKgF,GAAG,CAAElF,IAAK,CAACgF,SAAS,CAAC,UAAU,CAACG,GAAG,CAAC,MAAM,CAAE,CAAC,cAClDjF,IAAA,OAAA6E,QAAA,CAAI,cAAY,CAAI,CAAC,EACjB,CAAC,cACT3E,KAAA,CAACd,MAAM,EAAAyF,QAAA,eACH7E,IAAA,CAACX,KAAK,EAAC6F,IAAI,CAAC,GAAG,CAACC,OAAO,cACnBjF,KAAA,CAAAE,SAAA,EAAAyE,QAAA,eAEA7E,IAAA,CAACP,UAAU,GAAE,CAAC,cACdO,IAAA,CAACN,sBAAsB,GAAE,CAAC,cAG1BM,IAAA,QAAA6E,QAAA,cACI7E,IAAA,aACIoF,KAAK,CAAEtD,SAAU,CACjBuD,QAAQ,CAAGC,CAAC,EAAKvD,YAAY,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9CI,WAAW,CAAC,oCAAoC,CAChDC,IAAI,CAAC,GAAI;AAAA,CACTC,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,QAAS,CAAG;AAAA,CACrC,CAAC,CACX,CAAC,cAGN1F,KAAA,QAAA2E,QAAA,eACI7E,IAAA,UACI6F,IAAI,CAAC,MAAM,CACXT,KAAK,CAAErE,iBAAkB,CACzBsE,QAAQ,CAAGC,CAAC,EAAKtE,oBAAoB,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACtDI,WAAW,CAAC,+BAA+B,CAC3CE,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,QAAS,CAAG;AAAA,CAC/C,CAAC,cACF5F,IAAA,WAAQ8F,OAAO,CAAElB,0BAA2B,CAAAC,QAAA,CAAC,6BAA2B,CAAQ,CAAC,EAChF,CAAC,cAGN3E,KAAA,QAAA2E,QAAA,eACI7E,IAAA,UACI6F,IAAI,CAAC,MAAM,CACXT,KAAK,CAAEnE,oBAAqB,CAC5BoE,QAAQ,CAAGC,CAAC,EAAKpE,uBAAuB,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACzDI,WAAW,CAAC,+BAA+B,CAC9C,CAAC,cACFxF,IAAA,WAAQ8F,OAAO,CAAE5D,yBAA0B,CAAA2C,QAAA,CAAC,+BAA6B,CAAQ,CAAC,EACjF,CAAC,cAEN7E,IAAA,CAACL,kBAAkB,EAACoG,iBAAiB,CAAE7C,qBAAsB,CAAE,CAAC,cAEhElD,IAAA,QAAK8E,SAAS,CAAC,yBAAyB,CAAAD,QAAA,CACnCvE,kBAAkB,CAACE,QAAQ,eACxBR,IAAA,CAACJ,yBAAyB,EACtBoG,SAAS,sBAAA3C,MAAA,CAAuB/C,kBAAkB,CAACE,QAAQ,CAAG,CAC9DC,KAAK,CAAEH,kBAAkB,CAACG,KAAM,CAChCC,WAAW,CAAEJ,kBAAkB,CAACI,WAAY,CAC5CuF,mBAAmB,CAAErF,gBAAiB,CACtCsF,uBAAuB,CAAE9E,kBAAoB;AAAA,CAEhD,CACJ,CACA,CAAC,CAELd,kBAAkB,CAACE,QAAQ,EAAIG,aAAa,CAACiD,MAAM,CAAG,CAAC,eACxD5D,IAAA,WAAQ8F,OAAO,CAAEvC,sBAAuB,CAAAsB,QAAA,CAAC,oBAAkB,CAAQ,CAClE,CAEA,CAACtD,QAAQ,CAACE,OAAO,CAAG,CAAC,EAAIF,QAAQ,CAACI,SAAS,gBACxCzB,KAAA,CAAAE,SAAA,EAAAyE,QAAA,eACI7E,IAAA,OAAA6E,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B7E,IAAA,aAAUoF,KAAK,CAAE7D,QAAQ,CAACE,OAAQ,CAAC0E,GAAG,CAAE5E,QAAQ,CAACG,KAAM,CAAW,CAAC,cACnExB,KAAA,MAAA2E,QAAA,EAAItD,QAAQ,CAACE,OAAO,CAAC,MAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,kBAAgB,EAAG,CAAC,EAC/D,CACL,cAEL1B,IAAA,QAAK8E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAC3BtD,QAAQ,CAACI,SAAS,eACf3B,IAAA,CAACH,SAAS,EAAC6D,OAAO,CAAEA,OAAQ,CAACb,IAAI,CAAEjB,aAAc,CAAE,CACtD,CACA,CAAC,EAEJ,CACD,CAAE,CAAC,cACJ5B,IAAA,CAACX,KAAK,EAAC6F,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEnF,IAAA,CAACT,kBAAkB,GAAE,CAAE,CAAE,CAAC,EACtD,CAAC,EACR,CAAC,CACF,CAAC,CAEjB,CAEA,cAAe,CAAAc,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}