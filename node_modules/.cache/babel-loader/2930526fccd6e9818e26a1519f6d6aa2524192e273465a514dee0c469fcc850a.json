{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs,\n  onSelectionComplete\n}) {\n  _s();\n  const imageRef = useRef(null);\n  const [scaleFactor, setScaleFactor] = useState(1);\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [currentPair, setCurrentPair] = useState([]);\n  useEffect(() => {\n    const calculateScaleFactor = () => {\n      var _imageRef$current, _imageRef$current2;\n      const naturalWidth = (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.naturalWidth;\n      const displayWidth = (_imageRef$current2 = imageRef.current) === null || _imageRef$current2 === void 0 ? void 0 : _imageRef$current2.clientWidth;\n      if (naturalWidth && displayWidth) {\n        setScaleFactor(displayWidth / naturalWidth);\n      }\n    };\n    if (imageRef.current) {\n      if (imageRef.current.complete) {\n        calculateScaleFactor();\n      } else {\n        imageRef.current.onload = calculateScaleFactor;\n      }\n    }\n    window.addEventListener('resize', calculateScaleFactor);\n    return () => {\n      window.removeEventListener('resize', calculateScaleFactor);\n    };\n  }, [imagePath]);\n  useEffect(() => {\n    onSelectionComplete(selectedPairs);\n  }, [selectedPairs, onSelectionComplete]);\n  const addSelection = index => {\n    const updatedCurrentPair = [...currentPair, index];\n    if (updatedCurrentPair.length === 2) {\n      setSelectedPairs([...selectedPairs, updatedCurrentPair]);\n      setCurrentPair([]);\n    } else {\n      setCurrentPair(updatedCurrentPair);\n    }\n  };\n  const undoSelection = () => {\n    if (currentPair.length > 0) {\n      setCurrentPair(currentPair.slice(0, -1));\n    } else if (selectedPairs.length > 0) {\n      const updatedPairs = [...selectedPairs];\n      updatedPairs.pop();\n      setSelectedPairs(updatedPairs);\n    }\n  };\n\n  // New function to generate labels\n  const getLabel = index => {\n    let label = '';\n    const flatSelected = selectedPairs.flat();\n    const pairIndex = flatSelected.indexOf(index);\n    if (pairIndex !== -1) {\n      // If the index is found in selectedPairs\n      label = `${Math.floor(pairIndex / 2) + 1}${pairIndex % 2 === 0 ? 'A' : 'B'}`;\n    } else if (currentPair.includes(index)) {\n      // If the index is the current selection\n      label = `${selectedPairs.length + 1}A`;\n    }\n    return label;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: undoSelection,\n      style: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        zIndex: 10\n      },\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      children: blobs.map((blob, index) => {\n        const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\n        const isSelected = currentPair.includes(index) || selectedPairs.flat().includes(index);\n        const label = getLabel(index);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            fill: \"none\",\n            stroke: isSelected ? 'blue' : 'red',\n            strokeWidth: \"2\",\n            onClick: () => addSelection(index),\n            style: {\n              pointerEvents: 'all',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), label && /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x + 5,\n            y: y + 20,\n            fill: \"blue\",\n            fontSize: \"15\",\n            style: {\n              pointerEvents: 'none'\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveAnnotatedImage, \"guX0xh86JSniVo0Ups06Z3OkblE=\");\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","InteractiveAnnotatedImage","imagePath","blobs","onSelectionComplete","_s","imageRef","scaleFactor","setScaleFactor","selectedPairs","setSelectedPairs","currentPair","setCurrentPair","calculateScaleFactor","_imageRef$current","_imageRef$current2","naturalWidth","current","displayWidth","clientWidth","complete","onload","window","addEventListener","removeEventListener","addSelection","index","updatedCurrentPair","length","undoSelection","slice","updatedPairs","pop","getLabel","label","flatSelected","flat","pairIndex","indexOf","Math","floor","includes","style","position","display","children","onClick","right","top","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","maxWidth","left","width","height","map","blob","x","y","coordinates","coord","isSelected","fill","stroke","strokeWidth","pointerEvents","cursor","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs, onSelectionComplete }) {\r\n  const imageRef = useRef(null);\r\n  const [scaleFactor, setScaleFactor] = useState(1);\r\n  const [selectedPairs, setSelectedPairs] = useState([]);\r\n  const [currentPair, setCurrentPair] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const calculateScaleFactor = () => {\r\n      const naturalWidth = imageRef.current?.naturalWidth;\r\n      const displayWidth = imageRef.current?.clientWidth;\r\n      if (naturalWidth && displayWidth) {\r\n        setScaleFactor(displayWidth / naturalWidth);\r\n      }\r\n    };\r\n\r\n    if (imageRef.current) {\r\n      if (imageRef.current.complete) {\r\n        calculateScaleFactor();\r\n      } else {\r\n        imageRef.current.onload = calculateScaleFactor;\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', calculateScaleFactor);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', calculateScaleFactor);\r\n    };\r\n  }, [imagePath]);\r\n\r\n  useEffect(() => {\r\n    onSelectionComplete(selectedPairs);\r\n  }, [selectedPairs, onSelectionComplete]);\r\n\r\n  const addSelection = (index) => {\r\n    const updatedCurrentPair = [...currentPair, index];\r\n    if (updatedCurrentPair.length === 2) {\r\n      setSelectedPairs([...selectedPairs, updatedCurrentPair]);\r\n      setCurrentPair([]);\r\n    } else {\r\n      setCurrentPair(updatedCurrentPair);\r\n    }\r\n  };\r\n\r\n  const undoSelection = () => {\r\n    if (currentPair.length > 0) {\r\n      setCurrentPair(currentPair.slice(0, -1));\r\n    } else if (selectedPairs.length > 0) {\r\n      const updatedPairs = [...selectedPairs];\r\n      updatedPairs.pop();\r\n      setSelectedPairs(updatedPairs);\r\n    }\r\n  };\r\n\r\n  // New function to generate labels\r\n  const getLabel = (index) => {\r\n    let label = '';\r\n    const flatSelected = selectedPairs.flat();\r\n    const pairIndex = flatSelected.indexOf(index);\r\n\r\n    if (pairIndex !== -1) {\r\n      // If the index is found in selectedPairs\r\n      label = `${Math.floor(pairIndex / 2) + 1}${pairIndex % 2 === 0 ? 'A' : 'B'}`;\r\n    } else if (currentPair.includes(index)) {\r\n      // If the index is the current selection\r\n      label = `${selectedPairs.length + 1}A`;\r\n    }\r\n    return label;\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <button onClick={undoSelection} style={{ position: 'absolute', right: 0, top: 0, zIndex: 10 }}>Undo</button>\r\n      <img ref={imageRef} src={imagePath} alt=\"Annotated Invoice\" style={{ maxWidth: '100%' }} />\r\n      <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\r\n        {blobs.map((blob, index) => {\r\n          const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\r\n          const isSelected = currentPair.includes(index) || selectedPairs.flat().includes(index);\r\n          const label = getLabel(index);\r\n\r\n          return (\r\n            <g key={index}>\r\n              <rect\r\n                x={x} y={y} width={width} height={height}\r\n                fill=\"none\" stroke={isSelected ? 'blue' : 'red'} strokeWidth=\"2\"\r\n                onClick={() => addSelection(index)}\r\n                style={{ pointerEvents: 'all', cursor: 'pointer' }}\r\n              />\r\n              {label && (\r\n                <text\r\n                  x={x + 5} y={y + 20}\r\n                  fill=\"blue\" fontSize=\"15\"\r\n                  style={{ pointerEvents: 'none' }}\r\n                >\r\n                  {label}\r\n                </text>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractiveAnnotatedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}