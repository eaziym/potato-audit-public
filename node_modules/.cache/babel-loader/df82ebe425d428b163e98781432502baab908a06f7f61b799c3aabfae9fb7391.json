{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs,\n  onSelectionComplete\n}) {\n  _s();\n  const imageRef = useRef(null);\n  const [scaleFactor, setScaleFactor] = useState(1);\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [currentPair, setCurrentPair] = useState([]);\n  const [selectionCount, setSelectionCount] = useState({});\n  useEffect(() => {\n    const calculateScaleFactor = () => {\n      if (imageRef.current) {\n        const naturalWidth = imageRef.current.naturalWidth;\n        const displayWidth = imageRef.current.clientWidth;\n        if (naturalWidth && displayWidth) {\n          setScaleFactor(displayWidth / naturalWidth);\n        }\n      }\n    };\n    if (imageRef.current) {\n      if (imageRef.current.complete) {\n        calculateScaleFactor();\n      } else {\n        imageRef.current.onload = calculateScaleFactor;\n      }\n    }\n    window.addEventListener('resize', calculateScaleFactor);\n    return () => window.removeEventListener('resize', calculateScaleFactor);\n  }, [imagePath]);\n  useEffect(() => {\n    onSelectionComplete(selectedPairs);\n  }, [selectedPairs, onSelectionComplete]);\n  const addSelection = index => {\n    // Update selection count\n    const updatedSelectionCount = {\n      ...selectionCount\n    };\n    if (updatedSelectionCount[index] >= 2) return; // Prevent more than two selections\n    updatedSelectionCount[index] = (updatedSelectionCount[index] || 0) + 1;\n    setSelectionCount(updatedSelectionCount);\n\n    // Add to currentPair or form a new pair\n    if (currentPair.length === 0 || currentPair.includes(index)) {\n      setCurrentPair([...currentPair, index]);\n      if (currentPair.length === 1) {\n        setSelectedPairs([...selectedPairs, [...currentPair, index]]);\n        setCurrentPair([]);\n      }\n    } else {\n      setCurrentPair([index]);\n    }\n  };\n  const undoSelection = () => {\n    if (currentPair.length > 0) {\n      setCurrentPair(currentPair.slice(0, -1));\n    } else if (selectedPairs.length > 0) {\n      const lastPair = selectedPairs[selectedPairs.length - 1];\n      setSelectedPairs(selectedPairs.slice(0, -1));\n      setCurrentPair([lastPair[0]]); // Allow re-selection of the last field label\n      // Adjust selection count\n      const updatedSelectionCount = {\n        ...selectionCount\n      };\n      updatedSelectionCount[lastPair[1]] = (updatedSelectionCount[lastPair[1]] || 0) - 1;\n      setSelectionCount(updatedSelectionCount);\n    }\n  };\n  const getLabel = index => {\n    let label = '';\n    selectedPairs.forEach((pair, pairIndex) => {\n      if (pair.includes(index)) {\n        const isA = pair[0] === index;\n        const isB = pair[1] === index && pair[0] !== pair[1]; // Ensure it's a distinct second selection\n        if (isA) {\n          label += `${pairIndex + 1}A `;\n        }\n        if (isB) {\n          label += `${pairIndex + 1}B `;\n        }\n      }\n    });\n    if (currentPair.includes(index)) {\n      label += `${selectedPairs.length + 1}A `;\n    }\n    return label.trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: undoSelection,\n      style: {\n        position: 'absolute',\n        zIndex: 10,\n        margin: '10px'\n      },\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'all'\n      },\n      children: blobs.map((blob, index) => {\n        const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\n        const isSelected = selectedPairs.flat().includes(index) || currentPair.includes(index);\n        const label = getLabel(index);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          onClick: () => addSelection(index),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            fill: \"none\",\n            stroke: isSelected ? 'blue' : 'red',\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), label && /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x + 5,\n            y: y + 15,\n            fill: \"blue\",\n            fontSize: \"smaller\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveAnnotatedImage, \"Wv9RiW5rv8rN+qdF9Fq39kaX6AU=\");\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","InteractiveAnnotatedImage","imagePath","blobs","onSelectionComplete","_s","imageRef","scaleFactor","setScaleFactor","selectedPairs","setSelectedPairs","currentPair","setCurrentPair","selectionCount","setSelectionCount","calculateScaleFactor","current","naturalWidth","displayWidth","clientWidth","complete","onload","window","addEventListener","removeEventListener","addSelection","index","updatedSelectionCount","length","includes","undoSelection","slice","lastPair","getLabel","label","forEach","pair","pairIndex","isA","isB","trim","style","position","display","children","onClick","zIndex","margin","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","maxWidth","top","left","width","height","pointerEvents","map","blob","x","y","coordinates","coord","isSelected","flat","cursor","fill","stroke","strokeWidth","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs, onSelectionComplete }) {\r\n  const imageRef = useRef(null);\r\n  const [scaleFactor, setScaleFactor] = useState(1);\r\n  const [selectedPairs, setSelectedPairs] = useState([]);\r\n  const [currentPair, setCurrentPair] = useState([]);\r\n  const [selectionCount, setSelectionCount] = useState({});\r\n\r\n  useEffect(() => {\r\n    const calculateScaleFactor = () => {\r\n      if (imageRef.current) {\r\n        const naturalWidth = imageRef.current.naturalWidth;\r\n        const displayWidth = imageRef.current.clientWidth;\r\n        if (naturalWidth && displayWidth) {\r\n          setScaleFactor(displayWidth / naturalWidth);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (imageRef.current) {\r\n      if (imageRef.current.complete) {\r\n        calculateScaleFactor();\r\n      } else {\r\n        imageRef.current.onload = calculateScaleFactor;\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', calculateScaleFactor);\r\n    return () => window.removeEventListener('resize', calculateScaleFactor);\r\n  }, [imagePath]);\r\n\r\n  useEffect(() => {\r\n    onSelectionComplete(selectedPairs);\r\n  }, [selectedPairs, onSelectionComplete]);\r\n\r\n  const addSelection = (index) => {\r\n    // Update selection count\r\n    const updatedSelectionCount = { ...selectionCount };\r\n    if (updatedSelectionCount[index] >= 2) return; // Prevent more than two selections\r\n    updatedSelectionCount[index] = (updatedSelectionCount[index] || 0) + 1;\r\n    setSelectionCount(updatedSelectionCount);\r\n\r\n    // Add to currentPair or form a new pair\r\n    if (currentPair.length === 0 || currentPair.includes(index)) {\r\n      setCurrentPair([...currentPair, index]);\r\n      if (currentPair.length === 1) {\r\n        setSelectedPairs([...selectedPairs, [...currentPair, index]]);\r\n        setCurrentPair([]);\r\n      }\r\n    } else {\r\n      setCurrentPair([index]);\r\n    }\r\n  };\r\n\r\n  const undoSelection = () => {\r\n    if (currentPair.length > 0) {\r\n      setCurrentPair(currentPair.slice(0, -1));\r\n    } else if (selectedPairs.length > 0) {\r\n      const lastPair = selectedPairs[selectedPairs.length - 1];\r\n      setSelectedPairs(selectedPairs.slice(0, -1));\r\n      setCurrentPair([lastPair[0]]); // Allow re-selection of the last field label\r\n      // Adjust selection count\r\n      const updatedSelectionCount = { ...selectionCount };\r\n      updatedSelectionCount[lastPair[1]] = (updatedSelectionCount[lastPair[1]] || 0) - 1;\r\n      setSelectionCount(updatedSelectionCount);\r\n    }\r\n  };\r\n\r\n  const getLabel = (index) => {\r\n    let label = '';\r\n    selectedPairs.forEach((pair, pairIndex) => {\r\n      if (pair.includes(index)) {\r\n        const isA = pair[0] === index;\r\n        const isB = pair[1] === index && pair[0] !== pair[1]; // Ensure it's a distinct second selection\r\n        if (isA) {\r\n          label += `${pairIndex + 1}A `;\r\n        }\r\n        if (isB) {\r\n          label += `${pairIndex + 1}B `;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (currentPair.includes(index)) {\r\n      label += `${selectedPairs.length + 1}A `;\r\n    }\r\n\r\n    return label.trim();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <button onClick={undoSelection} style={{ position: 'absolute', zIndex: 10, margin: '10px' }}>Undo</button>\r\n      <img ref={imageRef} src={imagePath} alt=\"Annotated Invoice\" style={{ maxWidth: '100%' }} />\r\n      <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'all' }}>\r\n        {blobs.map((blob, index) => {\r\n          const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\r\n          const isSelected = selectedPairs.flat().includes(index) || currentPair.includes(index);\r\n          const label = getLabel(index);\r\n\r\n          return (\r\n            <g key={index} onClick={() => addSelection(index)} style={{ cursor: 'pointer' }}>\r\n              <rect\r\n                x={x} y={y} width={width} height={height}\r\n                fill=\"none\" stroke={isSelected ? 'blue' : 'red'} strokeWidth=\"2\"\r\n              />\r\n              {label && (\r\n                <text\r\n                  x={x + 5} y={y + 15}\r\n                  fill=\"blue\" fontSize=\"smaller\"\r\n                >\r\n                  {label}\r\n                </text>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractiveAnnotatedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}