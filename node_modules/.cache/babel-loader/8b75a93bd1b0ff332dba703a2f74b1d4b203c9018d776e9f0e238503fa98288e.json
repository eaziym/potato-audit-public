{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport './App.css';\nimport logo from './favicon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [processedImageInfo, setProcessedImageInfo] = useState({\n    filename: '',\n    blobs: [],\n    mergedTexts: []\n  });\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n  const [labelVariations, setLabelVariations] = useState({});\n  const handleDirectorySubmit = async directoryPath => {\n    try {\n      setDirectoryPath(directoryPath);\n\n      // Adjust the endpoint as necessary. This should match your Flask route.\n      const response = await axios.post('/process-directory', {\n        directory: directoryPath\n      });\n      // Assuming the response contains both the filename and blobs data\n      // Update this according to the actual structure of your response\n      // Assuming your Flask endpoint now also returns merged texts along with blobs\n      const {\n        filename,\n        blobs,\n        mergedTexts\n      } = response.data;\n      setProcessedImageInfo({\n        filename,\n        blobs,\n        mergedTexts\n      }); // Update state with filename, blobs, and mergedTexts\n    } catch (error) {\n      console.error(\"Error processing directory:\", error);\n    }\n  };\n  const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n  console.log(\"Processed Image Path:\", processedImagePath);\n  console.log(\"Processed Image Info:\", processedImageInfo);\n  console.log(\"Selected Pairs:\", selectedPairs);\n  console.log(\"Blobs:\", processedImageInfo.blobs);\n  console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n  const handleProcessSelection = async () => {\n    // Assuming `selectedPairs` contains the indexes of selected pairs,\n    // and `processedImageInfo.blobs` contains the blobs data\n    try {\n      const response = await axios.post('/process-selected-pairs', {\n        directoryPath,\n        selectedPairs,\n        blobs: processedImageInfo.blobs,\n        mergedTexts: processedImageInfo.mergedTexts,\n        labelVariations // Send label variations to the backend\n      });\n      console.log(response.data); // Handle response as needed\n    } catch (error) {\n      console.error(\"Error sending selections:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Potato Audit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchAnnouncementsForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DirectoryInputForm, {\n      onDirectorySubmit: handleDirectorySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invoice-image-container\",\n      children: processedImageInfo.filename && /*#__PURE__*/_jsxDEV(InteractiveAnnotatedImage, {\n        imagePath: `/processed-images/${processedImageInfo.filename}`,\n        blobs: processedImageInfo.blobs,\n        mergedTexts: processedImageInfo.mergedTexts,\n        onSelectionComplete: setSelectedPairs,\n        onLabelVariationsUpdate: setLabelVariations // Handle label variations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), processedImageInfo.filename && selectedPairs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProcessSelection,\n      children: \"Process Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fiX6NiaKH57NEevZ4lfdSHJ2HJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","UploadForm","FetchAnnouncementsForm","DirectoryInputForm","InteractiveAnnotatedImage","logo","jsxDEV","_jsxDEV","App","_s","processedImageInfo","setProcessedImageInfo","filename","blobs","mergedTexts","selectedPairs","setSelectedPairs","directoryPath","setDirectoryPath","labelVariations","setLabelVariations","handleDirectorySubmit","response","post","directory","data","error","console","processedImagePath","log","handleProcessSelection","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onDirectorySubmit","imagePath","onSelectionComplete","onLabelVariationsUpdate","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport './App.css';\nimport logo from './favicon.png'; \n\n\n\nfunction App() {\n    const [processedImageInfo, setProcessedImageInfo] = useState({ filename: '', blobs: [], mergedTexts: []});\n    const [selectedPairs, setSelectedPairs] = useState([]);\n    const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n    const [labelVariations, setLabelVariations] = useState({});\n\n\n\n    const handleDirectorySubmit = async (directoryPath) => {\n        try {\n            setDirectoryPath(directoryPath);\n\n            // Adjust the endpoint as necessary. This should match your Flask route.\n            const response = await axios.post('/process-directory', { directory: directoryPath });\n            // Assuming the response contains both the filename and blobs data\n            // Update this according to the actual structure of your response\n            // Assuming your Flask endpoint now also returns merged texts along with blobs\n            const { filename, blobs, mergedTexts } = response.data; \n            setProcessedImageInfo({ filename, blobs, mergedTexts }); // Update state with filename, blobs, and mergedTexts\n        } catch (error) {\n            console.error(\"Error processing directory:\", error);\n        }\n    };\n\n    const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n    console.log(\"Processed Image Path:\", processedImagePath);\n    console.log(\"Processed Image Info:\", processedImageInfo);\n    \n    console.log(\"Selected Pairs:\", selectedPairs);\n    console.log(\"Blobs:\", processedImageInfo.blobs);\n    console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n\n    const handleProcessSelection = async () => {\n        // Assuming `selectedPairs` contains the indexes of selected pairs,\n        // and `processedImageInfo.blobs` contains the blobs data\n        try {\n            const response = await axios.post('/process-selected-pairs', {\n                directoryPath,\n                selectedPairs,\n                blobs: processedImageInfo.blobs,\n                mergedTexts: processedImageInfo.mergedTexts, \n                labelVariations, // Send label variations to the backend\n\n            });\n            console.log(response.data); // Handle response as needed\n        } catch (error) {\n            console.error(\"Error sending selections:\", error);\n        }\n    };\n    \n\n    return (\n        <div className=\"App\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Potato Audit</h1>\n            <UploadForm />\n            <FetchAnnouncementsForm />\n            <DirectoryInputForm onDirectorySubmit={handleDirectorySubmit} />\n\n            <div className=\"invoice-image-container\">\n                {processedImageInfo.filename && (\n                    <InteractiveAnnotatedImage\n                        imagePath={`/processed-images/${processedImageInfo.filename}`}\n                        blobs={processedImageInfo.blobs}\n                        mergedTexts={processedImageInfo.mergedTexts}\n                        onSelectionComplete={setSelectedPairs}\n                        onLabelVariationsUpdate={setLabelVariations} // Handle label variations\n                        \n                    />\n                )}\n            </div>\n            {processedImageInfo.filename && selectedPairs.length > 0 && (\n            <button onClick={handleProcessSelection}>Process Selections</button>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}