{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs,\n  onSelectionComplete\n}) {\n  _s();\n  const imageRef = useRef(null);\n  const [scaleFactor, setScaleFactor] = useState(1);\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [currentPair, setCurrentPair] = useState([]);\n  const [selectionCount, setSelectionCount] = useState({});\n  useEffect(() => {\n    const calculateScaleFactor = () => {\n      if (imageRef.current) {\n        const naturalWidth = imageRef.current.naturalWidth;\n        const displayWidth = imageRef.current.clientWidth;\n        if (naturalWidth && displayWidth) {\n          setScaleFactor(displayWidth / naturalWidth);\n        }\n      }\n    };\n    if (imageRef.current) {\n      if (imageRef.current.complete) {\n        calculateScaleFactor();\n      } else {\n        imageRef.current.onload = calculateScaleFactor;\n      }\n    }\n    window.addEventListener('resize', calculateScaleFactor);\n    return () => window.removeEventListener('resize', calculateScaleFactor);\n  }, [imagePath]);\n  useEffect(() => {\n    onSelectionComplete(selectedPairs);\n  }, [selectedPairs, onSelectionComplete]);\n  const addSelection = index => {\n    if (selectionCount[index] >= 2) return;\n    const updatedCurrentPair = [...currentPair, index];\n    const updatedSelectionCount = {\n      ...selectionCount,\n      [index]: (selectionCount[index] || 0) + 1\n    };\n    if (updatedCurrentPair.length === 2) {\n      setSelectedPairs([...selectedPairs, updatedCurrentPair]);\n      setCurrentPair([]);\n    } else {\n      setCurrentPair(updatedCurrentPair);\n    }\n    setSelectionCount(updatedSelectionCount);\n  };\n  const undoSelection = () => {\n    let lastSelectedIndex;\n    if (currentPair.length > 0) {\n      lastSelectedIndex = currentPair.pop();\n      setCurrentPair([...currentPair]);\n    } else if (selectedPairs.length > 0) {\n      const lastPair = selectedPairs[selectedPairs.length - 1];\n      lastSelectedIndex = lastPair.pop();\n      if (lastPair.length === 0) {\n        selectedPairs.pop();\n      } else {\n        selectedPairs[selectedPairs.length - 1] = lastPair;\n      }\n      setSelectedPairs([...selectedPairs]);\n    }\n    if (lastSelectedIndex !== undefined) {\n      const updatedSelectionCount = {\n        ...selectionCount\n      };\n      if (updatedSelectionCount[lastSelectedIndex] > 0) {\n        updatedSelectionCount[lastSelectedIndex]--;\n      }\n      setSelectionCount(updatedSelectionCount);\n    }\n  };\n  const getLabel = index => {\n    const occurrences = selectedPairs.flat().filter(i => i === index).length + (currentPair.includes(index) ? 1 : 0);\n    let label = '';\n    selectedPairs.forEach((pair, pairIndex) => {\n      pair.forEach((elementIndex, elementPosition) => {\n        if (elementIndex === index) {\n          label += `${pairIndex + 1}${elementPosition === 0 ? 'A' : 'B'} `;\n        }\n      });\n    });\n    if (currentPair.includes(index) && occurrences < 2) {\n      label += `${selectedPairs.length + 1}A `;\n    }\n    return label.trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: undoSelection,\n      style: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        zIndex: 10\n      },\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      children: blobs.map((blob, index) => {\n        const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\n        const isSelected = selectedPairs.flat().includes(index) || currentPair.includes(index);\n        const label = getLabel(index);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          onClick: () => addSelection(index),\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            fill: \"none\",\n            stroke: isSelected ? 'blue' : 'red',\n            strokeWidth: \"2\",\n            style: {\n              pointerEvents: 'all',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), label && /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x + 5,\n            y: y + 20,\n            fill: \"blue\",\n            fontSize: \"15\",\n            style: {\n              pointerEvents: 'none'\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveAnnotatedImage, \"Wv9RiW5rv8rN+qdF9Fq39kaX6AU=\");\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","InteractiveAnnotatedImage","imagePath","blobs","onSelectionComplete","_s","imageRef","scaleFactor","setScaleFactor","selectedPairs","setSelectedPairs","currentPair","setCurrentPair","selectionCount","setSelectionCount","calculateScaleFactor","current","naturalWidth","displayWidth","clientWidth","complete","onload","window","addEventListener","removeEventListener","addSelection","index","updatedCurrentPair","updatedSelectionCount","length","undoSelection","lastSelectedIndex","pop","lastPair","undefined","getLabel","occurrences","flat","filter","i","includes","label","forEach","pair","pairIndex","elementIndex","elementPosition","trim","style","position","display","children","onClick","right","top","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","maxWidth","left","width","height","map","blob","x","y","coordinates","coord","isSelected","fill","stroke","strokeWidth","pointerEvents","cursor","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs, onSelectionComplete }) {\r\n  const imageRef = useRef(null);\r\n  const [scaleFactor, setScaleFactor] = useState(1);\r\n  const [selectedPairs, setSelectedPairs] = useState([]);\r\n  const [currentPair, setCurrentPair] = useState([]);\r\n  const [selectionCount, setSelectionCount] = useState({});\r\n\r\n  useEffect(() => {\r\n    const calculateScaleFactor = () => {\r\n      if (imageRef.current) {\r\n        const naturalWidth = imageRef.current.naturalWidth;\r\n        const displayWidth = imageRef.current.clientWidth;\r\n        if (naturalWidth && displayWidth) {\r\n          setScaleFactor(displayWidth / naturalWidth);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (imageRef.current) {\r\n      if (imageRef.current.complete) {\r\n        calculateScaleFactor();\r\n      } else {\r\n        imageRef.current.onload = calculateScaleFactor;\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', calculateScaleFactor);\r\n    return () => window.removeEventListener('resize', calculateScaleFactor);\r\n  }, [imagePath]);\r\n\r\n  useEffect(() => {\r\n    onSelectionComplete(selectedPairs);\r\n  }, [selectedPairs, onSelectionComplete]);\r\n\r\n  const addSelection = (index) => {\r\n    if (selectionCount[index] >= 2) return;\r\n\r\n    const updatedCurrentPair = [...currentPair, index];\r\n    const updatedSelectionCount = { ...selectionCount, [index]: (selectionCount[index] || 0) + 1 };\r\n\r\n    if (updatedCurrentPair.length === 2) {\r\n      setSelectedPairs([...selectedPairs, updatedCurrentPair]);\r\n      setCurrentPair([]);\r\n    } else {\r\n      setCurrentPair(updatedCurrentPair);\r\n    }\r\n    setSelectionCount(updatedSelectionCount);\r\n  };\r\n\r\n  const undoSelection = () => {\r\n    let lastSelectedIndex;\r\n    if (currentPair.length > 0) {\r\n      lastSelectedIndex = currentPair.pop();\r\n      setCurrentPair([...currentPair]);\r\n    } else if (selectedPairs.length > 0) {\r\n      const lastPair = selectedPairs[selectedPairs.length - 1];\r\n      lastSelectedIndex = lastPair.pop();\r\n      if (lastPair.length === 0) {\r\n        selectedPairs.pop();\r\n      } else {\r\n        selectedPairs[selectedPairs.length - 1] = lastPair;\r\n      }\r\n      setSelectedPairs([...selectedPairs]);\r\n    }\r\n\r\n    if (lastSelectedIndex !== undefined) {\r\n      const updatedSelectionCount = { ...selectionCount };\r\n      if (updatedSelectionCount[lastSelectedIndex] > 0) {\r\n        updatedSelectionCount[lastSelectedIndex]--;\r\n      }\r\n      setSelectionCount(updatedSelectionCount);\r\n    }\r\n  };\r\n\r\n  const getLabel = (index) => {\r\n    const occurrences = selectedPairs.flat().filter(i => i === index).length + (currentPair.includes(index) ? 1 : 0);\r\n    let label = '';\r\n\r\n    selectedPairs.forEach((pair, pairIndex) => {\r\n      pair.forEach((elementIndex, elementPosition) => {\r\n        if (elementIndex === index) {\r\n          label += `${pairIndex + 1}${elementPosition === 0 ? 'A' : 'B'} `;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (currentPair.includes(index) && occurrences < 2) {\r\n      label += `${selectedPairs.length + 1}A `;\r\n    }\r\n\r\n    return label.trim();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <button onClick={undoSelection} style={{ position: 'absolute', right: 0, top: 0, zIndex: 10 }}>Undo</button>\r\n      <img ref={imageRef} src={imagePath} alt=\"Annotated Invoice\" style={{ maxWidth: '100%' }} />\r\n      <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\r\n        {blobs.map((blob, index) => {\r\n          const [x, y, width, height] = blob.coordinates.map(coord => coord * scaleFactor);\r\n          const isSelected = selectedPairs.flat().includes(index) || currentPair.includes(index);\r\n          const label = getLabel(index);\r\n\r\n          return (\r\n            <g key={index} onClick={() => addSelection(index)}>\r\n              <rect\r\n                x={x} y={y} width={width} height={height}\r\n                fill=\"none\" stroke={isSelected ? 'blue' : 'red'} strokeWidth=\"2\"\r\n                style={{ pointerEvents: 'all', cursor: 'pointer' }}\r\n              />\r\n              {label && (\r\n                <text\r\n                  x={x + 5} y={y + 20}\r\n                  fill=\"blue\" fontSize=\"15\"\r\n                  style={{ pointerEvents: 'none' }}\r\n                >\r\n                  {label}\r\n                </text>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractiveAnnotatedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}