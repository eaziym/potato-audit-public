{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// InteractiveAnnotatedImage.js\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      },\n      children: [\"const scaleFactor = displayWidth / originalWidth; // Calculate based on actual dimensions\", blobs.map((blob, index) => {\n        const scaledX = blob.coordinates.x * scaleFactor;\n        const scaledY = blob.coordinates.y * scaleFactor;\n        const scaledWidth = blob.coordinates.width * scaleFactor;\n        const scaledHeight = blob.coordinates.height * scaleFactor;\n        return /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: scaledX,\n          y: scaledY,\n          width: scaledWidth,\n          height: scaledHeight,\n          fill: \"none\",\n          stroke: \"red\",\n          strokeWidth: \"2\",\n          pointerEvents: \"all\",\n          onClick: () => console.log(`Box ${index} clicked`)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n}\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["InteractiveAnnotatedImage","imagePath","blobs","_jsxDEV","style","position","display","children","src","alt","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","top","left","width","height","pointerEvents","map","blob","index","scaledX","coordinates","x","scaleFactor","scaledY","y","scaledWidth","scaledHeight","fill","stroke","strokeWidth","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["// InteractiveAnnotatedImage.js\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs }) {\r\n    return (\r\n        <div style={{ position: 'relative', display: 'inline-block' }}>\r\n            <img src={imagePath} alt=\"Annotated Invoice\" style={{ maxWidth: '100%' }} />\r\n            <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none' }}>\r\n            const scaleFactor = displayWidth / originalWidth; // Calculate based on actual dimensions\r\n\r\n            {blobs.map((blob, index) => {\r\n                const scaledX = blob.coordinates.x * scaleFactor;\r\n                const scaledY = blob.coordinates.y * scaleFactor;\r\n                const scaledWidth = blob.coordinates.width * scaleFactor;\r\n                const scaledHeight = blob.coordinates.height * scaleFactor;\r\n                return (\r\n                    <rect key={index} x={scaledX} y={scaledY} width={scaledWidth} height={scaledHeight}\r\n                        fill=\"none\" stroke=\"red\" strokeWidth=\"2\"\r\n                        pointerEvents=\"all\" onClick={() => console.log(`Box ${index} clicked`)} />\r\n                );\r\n            })}\r\n\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InteractiveAnnotatedImage;\r\n\r\n"],"mappings":";;AAAA;AACA,SAASA,yBAAyBA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,EAAE;EACrD,oBACIC,OAAA;IAAKC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAAC,QAAA,gBAC1DJ,OAAA;MAAKK,GAAG,EAAEP,SAAU;MAACQ,GAAG,EAAC,mBAAmB;MAACL,KAAK,EAAE;QAAEM,QAAQ,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EX,OAAA;MAAKC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEU,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAO,CAAE;MAAAZ,QAAA,GAAC,2FAG7G,EAACL,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACxB,MAAMC,OAAO,GAAGF,IAAI,CAACG,WAAW,CAACC,CAAC,GAAGC,WAAW;QAChD,MAAMC,OAAO,GAAGN,IAAI,CAACG,WAAW,CAACI,CAAC,GAAGF,WAAW;QAChD,MAAMG,WAAW,GAAGR,IAAI,CAACG,WAAW,CAACP,KAAK,GAAGS,WAAW;QACxD,MAAMI,YAAY,GAAGT,IAAI,CAACG,WAAW,CAACN,MAAM,GAAGQ,WAAW;QAC1D,oBACIvB,OAAA;UAAkBsB,CAAC,EAAEF,OAAQ;UAACK,CAAC,EAAED,OAAQ;UAACV,KAAK,EAAEY,WAAY;UAACX,MAAM,EAAEY,YAAa;UAC/EC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,KAAK;UAACC,WAAW,EAAC,GAAG;UACxCd,aAAa,EAAC,KAAK;UAACe,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAE,OAAMd,KAAM,UAAS;QAAE,GAFhEA,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE6D,CAAC;MAEtF,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACuB,EAAA,GAtBQrC,yBAAyB;AAyBlC,eAAeA,yBAAyB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}