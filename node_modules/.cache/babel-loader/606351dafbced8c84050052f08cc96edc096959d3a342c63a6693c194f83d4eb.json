{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport './App.css';\nimport logo from './favicon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [processedImageInfo, setProcessedImageInfo] = useState({\n    filename: '',\n    blobs: [],\n    mergedTexts: []\n  });\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n  const [labelVariations, setLabelVariations] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState({\n    current: 0,\n    total: 1,\n    completed: false\n  });\n  const fetchProgress = useCallback(() => {\n    axios.get('/progress').then(response => {\n      const {\n        current,\n        total\n      } = response.data;\n      setProgress(prevProgress => ({\n        ...prevProgress,\n        current,\n        total,\n        completed: current >= total\n      }));\n      if (current >= total) {\n        setIsProcessing(false);\n      }\n    }).catch(error => console.error(\"Failed to fetch progress\", error));\n  }, []);\n  useEffect(() => {\n    let interval = null;\n    if (isProcessing) {\n      interval = setInterval(fetchProgress, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isProcessing, fetchProgress]);\n  const handleDirectorySubmit = async directoryPath => {\n    try {\n      setDirectoryPath(directoryPath);\n\n      // Adjust the endpoint as necessary. This should match your Flask route.\n      const response = await axios.post('/process-directory', {\n        directory: directoryPath\n      });\n      // Assuming the response contains both the filename and blobs data\n      // Update this according to the actual structure of your response\n      // Assuming your Flask endpoint now also returns merged texts along with blobs\n      const {\n        filename,\n        blobs,\n        mergedTexts\n      } = response.data;\n      setProcessedImageInfo({\n        filename,\n        blobs,\n        mergedTexts\n      }); // Update state with filename, blobs, and mergedTexts\n    } catch (error) {\n      console.error(\"Error processing directory:\", error);\n    }\n  };\n  const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n  console.log(\"Processed Image Path:\", processedImagePath);\n  console.log(\"Processed Image Info:\", processedImageInfo);\n  console.log(\"Selected Pairs:\", selectedPairs);\n  console.log(\"Blobs:\", processedImageInfo.blobs);\n  console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n  const handleProcessSelection = async () => {\n    setIsProcessing(true);\n\n    // Assuming `selectedPairs` contains the indexes of selected pairs,\n    // and `processedImageInfo.blobs` contains the blobs data\n    try {\n      const response = await axios.post('/process-selected-pairs', {\n        directoryPath,\n        selectedPairs,\n        blobs: processedImageInfo.blobs,\n        mergedTexts: processedImageInfo.mergedTexts,\n        labelVariations // Send label variations to the backend\n      });\n      console.log(response.data); // Handle response as needed\n      fetchProgress();\n    } catch (error) {\n      console.error(\"Error sending selections:\", error);\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Potato Audit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchAnnouncementsForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DirectoryInputForm, {\n      onDirectorySubmit: handleDirectorySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invoice-image-container\",\n      children: processedImageInfo.filename && /*#__PURE__*/_jsxDEV(InteractiveAnnotatedImage, {\n        imagePath: `/processed-images/${processedImageInfo.filename}`,\n        blobs: processedImageInfo.blobs,\n        mergedTexts: processedImageInfo.mergedTexts,\n        onSelectionComplete: setSelectedPairs,\n        onLabelVariationsUpdate: setLabelVariations // Handle label variations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), processedImageInfo.filename && selectedPairs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProcessSelection,\n      children: \"Process Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), (progress.current > 0 || progress.completed) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processing Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress.current,\n        max: progress.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [progress.current, \" of \", progress.total, \" files processed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"eaTmV4/6zrrJhib7jbRysKC7D2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","UploadForm","FetchAnnouncementsForm","DirectoryInputForm","InteractiveAnnotatedImage","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","processedImageInfo","setProcessedImageInfo","filename","blobs","mergedTexts","selectedPairs","setSelectedPairs","directoryPath","setDirectoryPath","labelVariations","setLabelVariations","isProcessing","setIsProcessing","progress","setProgress","current","total","completed","fetchProgress","get","then","response","data","prevProgress","catch","error","console","interval","setInterval","clearInterval","handleDirectorySubmit","post","directory","processedImagePath","log","handleProcessSelection","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onDirectorySubmit","imagePath","onSelectionComplete","onLabelVariationsUpdate","length","onClick","value","max","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport './App.css';\nimport logo from './favicon.png'; \n\n\n\nfunction App() {\n    const [processedImageInfo, setProcessedImageInfo] = useState({ filename: '', blobs: [], mergedTexts: []});\n    const [selectedPairs, setSelectedPairs] = useState([]);\n    const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n    const [labelVariations, setLabelVariations] = useState({});\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [progress, setProgress] = useState({ current: 0, total: 1, completed: false });\n\n    const fetchProgress = useCallback(() => {\n        axios.get('/progress')\n            .then(response => {\n                const { current, total } = response.data;\n                setProgress(prevProgress => ({\n                  ...prevProgress,\n                  current,\n                  total,\n                  completed: current >= total\n                }));\n                if (current >= total) {\n                    setIsProcessing(false);\n                }\n            })\n            .catch(error => console.error(\"Failed to fetch progress\", error));\n    }, []);\n\n\n    useEffect(() => {\n        let interval = null;\n        if (isProcessing) {\n            interval = setInterval(fetchProgress, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [isProcessing, fetchProgress]);\n\n\n\n    const handleDirectorySubmit = async (directoryPath) => {\n        try {\n            setDirectoryPath(directoryPath);\n\n            // Adjust the endpoint as necessary. This should match your Flask route.\n            const response = await axios.post('/process-directory', { directory: directoryPath });\n            // Assuming the response contains both the filename and blobs data\n            // Update this according to the actual structure of your response\n            // Assuming your Flask endpoint now also returns merged texts along with blobs\n            const { filename, blobs, mergedTexts } = response.data; \n            setProcessedImageInfo({ filename, blobs, mergedTexts }); // Update state with filename, blobs, and mergedTexts\n        } catch (error) {\n            console.error(\"Error processing directory:\", error);\n        }\n    };\n\n    const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n    console.log(\"Processed Image Path:\", processedImagePath);\n    console.log(\"Processed Image Info:\", processedImageInfo);\n    \n    console.log(\"Selected Pairs:\", selectedPairs);\n    console.log(\"Blobs:\", processedImageInfo.blobs);\n    console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n\n    const handleProcessSelection = async () => {\n        setIsProcessing(true);\n\n        // Assuming `selectedPairs` contains the indexes of selected pairs,\n        // and `processedImageInfo.blobs` contains the blobs data\n        try {\n            const response = await axios.post('/process-selected-pairs', {\n                directoryPath,\n                selectedPairs,\n                blobs: processedImageInfo.blobs,\n                mergedTexts: processedImageInfo.mergedTexts, \n                labelVariations, // Send label variations to the backend\n\n            });\n            console.log(response.data); // Handle response as needed\n            fetchProgress();\n\n        } catch (error) {\n            console.error(\"Error sending selections:\", error);\n            setIsProcessing(false);\n\n        }\n    };\n    \n\n    return (\n        <div className=\"App\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Potato Audit</h1>\n            <UploadForm />\n            <FetchAnnouncementsForm />\n            <DirectoryInputForm onDirectorySubmit={handleDirectorySubmit} />\n\n            <div className=\"invoice-image-container\">\n                {processedImageInfo.filename && (\n                    <InteractiveAnnotatedImage\n                        imagePath={`/processed-images/${processedImageInfo.filename}`}\n                        blobs={processedImageInfo.blobs}\n                        mergedTexts={processedImageInfo.mergedTexts}\n                        onSelectionComplete={setSelectedPairs}\n                        onLabelVariationsUpdate={setLabelVariations} // Handle label variations\n                        \n                    />\n                )}\n            </div>\n            \n            {processedImageInfo.filename && selectedPairs.length > 0 && (\n            <button onClick={handleProcessSelection}>Process Selections</button>\n            )}\n\n            {(progress.current > 0 || progress.completed) && (\n                <>\n                    <h2>Processing Progress</h2>\n                    <progress value={progress.current} max={progress.total}></progress>\n                    <p>{progress.current} of {progress.total} files processed</p>\n                </>\n            )}\n\n        </div>\n        \n    \n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}