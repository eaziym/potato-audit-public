{"ast":null,"code":"var _jsxFileName = \"/Users/msy/Desktop/Shiyao/repo/potato-audit/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport StaffBookingSystem from './StaffBookingSystem'; // Make sure to import your new component\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport DataTable from './DataTable';\nimport './App.css';\nimport logo from './favicon.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [processedImageInfo, setProcessedImageInfo] = useState({\n    filename: '',\n    blobs: [],\n    mergedTexts: []\n  });\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n  const [downloadDirectory, setDownloadDirectory] = useState(''); // New state for download directory input\n  const [downloadKAMDirectory, setDownloadKAMDirectory] = useState(''); // New state for download directory input\n  const [labelVariations, setLabelVariations] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState({\n    current: 0,\n    total: 1,\n    completed: false\n  });\n  const [processedData, setProcessedData] = useState([]);\n  const [companies, setCompanies] = useState(''); // State for storing the list of companies\n  const [announcements, setAnnouncements] = useState([]); // State for storing fetched announcements\n\n  const handleFetchProcessReports = () => {\n    axios.post('/fetch-process-reports', {\n      downloadDir: downloadKAMDirectory\n    }).then(response => {\n      alert('Reports fetched and processed successfully.');\n    }).catch(error => {\n      console.error('Error fetching and processing reports:', error);\n      alert('Failed to fetch and process reports.');\n    });\n  };\n  const fetchProgress = useCallback(() => {\n    axios.get('/progress').then(response => {\n      const {\n        current,\n        total\n      } = response.data;\n      setProgress(prevProgress => ({\n        ...prevProgress,\n        current,\n        total,\n        completed: current >= total\n      }));\n      if (current >= total) {\n        setIsProcessing(false);\n      }\n    }).catch(error => console.error(\"Failed to fetch progress\", error));\n  }, []);\n  useEffect(() => {\n    let interval = null;\n    if (isProcessing) {\n      interval = setInterval(fetchProgress, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isProcessing, fetchProgress]);\n  const handleDirectorySubmit = async directoryPath => {\n    try {\n      setDirectoryPath(directoryPath);\n\n      // Adjust the endpoint as necessary. This should match your Flask route.\n      const response = await axios.post('/process-directory', {\n        directory: directoryPath\n      });\n      // Assuming the response contains both the filename and blobs data\n      // Update this according to the actual structure of your response\n      // Assuming your Flask endpoint now also returns merged texts along with blobs\n      const {\n        filename,\n        blobs,\n        mergedTexts\n      } = response.data;\n      setProcessedImageInfo({\n        filename,\n        blobs,\n        mergedTexts\n      }); // Update state with filename, blobs, and mergedTexts\n    } catch (error) {\n      console.error(\"Error processing directory:\", error);\n    }\n  };\n  const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n  console.log(\"Processed Image Path:\", processedImagePath);\n  console.log(\"Processed Image Info:\", processedImageInfo);\n  console.log(\"Selected Pairs:\", selectedPairs);\n  console.log(\"Blobs:\", processedImageInfo.blobs);\n  console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n  const handleProcessSelection = async () => {\n    setIsProcessing(true);\n\n    // Assuming `selectedPairs` contains the indexes of selected pairs,\n    // and `processedImageInfo.blobs` contains the blobs data\n    try {\n      const response = await axios.post('/process-selected-pairs', {\n        directoryPath,\n        selectedPairs,\n        blobs: processedImageInfo.blobs,\n        mergedTexts: processedImageInfo.mergedTexts,\n        labelVariations // Send label variations to the backend\n      });\n      console.log(response.data); // Handle response as needed\n      fetchProgress();\n    } catch (error) {\n      console.error(\"Error sending selections:\", error);\n      setIsProcessing(false);\n    }\n  };\n  useEffect(() => {\n    if (progress.completed && directoryPath) {\n      const queryParams = new URLSearchParams({\n        directory: directoryPath\n      });\n      axios.get(`/get-processed-info?${queryParams}`).then(response => {\n        setProcessedData(response.data);\n      });\n    }\n  }, [progress.completed, directoryPath]);\n\n  // Dynamically generate columns from processedData\n  const columns = React.useMemo(() => {\n    if (processedData.length > 0) {\n      let cols = Object.keys(processedData[0]).map(key => ({\n        Header: key.charAt(0).toUpperCase() + key.slice(1),\n        accessor: key\n      }));\n\n      // Find the 'File URL' column\n      const urlColumn = cols.find(c => c.accessor === 'File URL');\n      // Filter out the 'File URL' column from the original columns\n      cols = cols.filter(c => c.accessor !== 'File URL');\n      // Add the 'File URL' column at the end\n      cols.push(urlColumn);\n      return cols;\n    }\n    return [];\n  }, [processedData]);\n  const fetchAnnouncementsForToday = async () => {\n    alert('Fetching announcements for today...');\n    try {\n      const response = await axios.post('/fetch-todays-announcements', {\n        companies: companies,\n        downloadDir: downloadDirectory // Sending download directory to the backend\n      });\n      setAnnouncements(response.data); // Assuming the endpoint returns the list of announcements\n      console.log(\"Fetched Announcements:\", announcements);\n    } catch (error) {\n      console.error(\"Error fetching announcements:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/booking\",\n                children: \"Staff Booking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Potato Audit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(UploadForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FetchAnnouncementsForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: companies,\n                onChange: e => setCompanies(e.target.value),\n                placeholder: \"Enter companies separated by comma\",\n                rows: \"4\" // Makes the textarea bigger\n                ,\n                style: {\n                  width: '100%',\n                  margin: '10px 0'\n                } // Ensures the textarea is fully visible and comfortably spaced\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: downloadDirectory,\n                onChange: e => setDownloadDirectory(e.target.value),\n                placeholder: \"Enter download directory path\",\n                style: {\n                  width: '100%',\n                  margin: '10px 0'\n                } // Ensures the input is fully visible and comfortably spaced\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: fetchAnnouncementsForToday,\n                children: \"Fetch Today's Announcements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: downloadKAMDirectory,\n                onChange: e => setDownloadKAMDirectory(e.target.value),\n                placeholder: \"Enter download directory path\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleFetchProcessReports,\n                children: \"Fetch and Process KAM Reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DirectoryInputForm, {\n              onDirectorySubmit: handleDirectorySubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invoice-image-container\",\n              children: processedImageInfo.filename && /*#__PURE__*/_jsxDEV(InteractiveAnnotatedImage, {\n                imagePath: `/processed-images/${processedImageInfo.filename}`,\n                blobs: processedImageInfo.blobs,\n                mergedTexts: processedImageInfo.mergedTexts,\n                onSelectionComplete: setSelectedPairs,\n                onLabelVariationsUpdate: setLabelVariations // Handle label variations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this), processedImageInfo.filename && selectedPairs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleProcessSelection,\n              children: \"Process Selections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this), (progress.current > 0 || progress.completed) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Processing Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                value: progress.current,\n                max: progress.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [progress.current, \" of \", progress.total, \" files processed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-container\",\n              children: progress.completed && /*#__PURE__*/_jsxDEV(DataTable, {\n                columns: columns,\n                data: processedData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/booking\",\n          element: /*#__PURE__*/_jsxDEV(StaffBookingSystem, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"aflU/iGaqhyBmCtPuAqEymur+ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","BrowserRouter","Router","Routes","Route","Link","StaffBookingSystem","axios","UploadForm","FetchAnnouncementsForm","DirectoryInputForm","InteractiveAnnotatedImage","DataTable","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","processedImageInfo","setProcessedImageInfo","filename","blobs","mergedTexts","selectedPairs","setSelectedPairs","directoryPath","setDirectoryPath","downloadDirectory","setDownloadDirectory","downloadKAMDirectory","setDownloadKAMDirectory","labelVariations","setLabelVariations","isProcessing","setIsProcessing","progress","setProgress","current","total","completed","processedData","setProcessedData","companies","setCompanies","announcements","setAnnouncements","handleFetchProcessReports","post","downloadDir","then","response","alert","catch","error","console","fetchProgress","get","data","prevProgress","interval","setInterval","clearInterval","handleDirectorySubmit","directory","processedImagePath","log","handleProcessSelection","queryParams","URLSearchParams","columns","useMemo","length","cols","Object","keys","map","key","Header","charAt","toUpperCase","slice","accessor","urlColumn","find","c","filter","push","fetchAnnouncementsForToday","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","path","element","value","onChange","e","target","placeholder","rows","style","width","margin","type","onClick","onDirectorySubmit","imagePath","onSelectionComplete","onLabelVariationsUpdate","max","_c","$RefreshReg$"],"sources":["/Users/msy/Desktop/Shiyao/repo/potato-audit/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport StaffBookingSystem from './StaffBookingSystem'; // Make sure to import your new component\nimport axios from 'axios';\nimport UploadForm from './UploadForm';\nimport FetchAnnouncementsForm from './FetchAnnouncementsForm';\nimport DirectoryInputForm from './DirectoryInputForm';\nimport InteractiveAnnotatedImage from './InteractiveAnnotatedImage';\nimport DataTable from './DataTable';\nimport './App.css';\nimport logo from './favicon.png'; \n\n\n\nfunction App() {\n    const [processedImageInfo, setProcessedImageInfo] = useState({ filename: '', blobs: [], mergedTexts: []});\n    const [selectedPairs, setSelectedPairs] = useState([]);\n    const [directoryPath, setDirectoryPath] = useState(''); // Add directoryPath to state\n    const [downloadDirectory, setDownloadDirectory] = useState(''); // New state for download directory input\n    const [downloadKAMDirectory, setDownloadKAMDirectory] = useState(''); // New state for download directory input\n    const [labelVariations, setLabelVariations] = useState({});\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [progress, setProgress] = useState({ current: 0, total: 1, completed: false });\n    const [processedData, setProcessedData] = useState([]);\n    const [companies, setCompanies] = useState(''); // State for storing the list of companies\n    const [announcements, setAnnouncements] = useState([]); // State for storing fetched announcements\n\n\n    const handleFetchProcessReports = () => {\n        axios.post('/fetch-process-reports', {\n            downloadDir: downloadKAMDirectory\n        }).then(response => {\n            alert('Reports fetched and processed successfully.');\n        }).catch(error => {\n            console.error('Error fetching and processing reports:', error);\n            alert('Failed to fetch and process reports.');\n        });\n    };\n\n    const fetchProgress = useCallback(() => {\n        axios.get('/progress')\n            .then(response => {\n                const { current, total } = response.data;\n                setProgress(prevProgress => ({\n                  ...prevProgress,\n                  current,\n                  total,\n                  completed: current >= total\n                }));\n                if (current >= total) {\n                    setIsProcessing(false);\n                }\n            })\n            .catch(error => console.error(\"Failed to fetch progress\", error));\n    }, []);\n\n\n    useEffect(() => {\n        let interval = null;\n        if (isProcessing) {\n            interval = setInterval(fetchProgress, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [isProcessing, fetchProgress]);\n\n\n\n    const handleDirectorySubmit = async (directoryPath) => {\n        try {\n            setDirectoryPath(directoryPath);\n\n            // Adjust the endpoint as necessary. This should match your Flask route.\n            const response = await axios.post('/process-directory', { directory: directoryPath });\n            // Assuming the response contains both the filename and blobs data\n            // Update this according to the actual structure of your response\n            // Assuming your Flask endpoint now also returns merged texts along with blobs\n            const { filename, blobs, mergedTexts } = response.data; \n            setProcessedImageInfo({ filename, blobs, mergedTexts }); // Update state with filename, blobs, and mergedTexts\n        } catch (error) {\n            console.error(\"Error processing directory:\", error);\n        }\n    };\n\n    const processedImagePath = processedImageInfo.filename ? `/processed-images/${processedImageInfo.filename}` : '';\n    console.log(\"Processed Image Path:\", processedImagePath);\n    console.log(\"Processed Image Info:\", processedImageInfo);\n    \n    console.log(\"Selected Pairs:\", selectedPairs);\n    console.log(\"Blobs:\", processedImageInfo.blobs);\n    console.log(\"Merged Texts:\", processedImageInfo.mergedTexts);\n\n    const handleProcessSelection = async () => {\n        setIsProcessing(true);\n\n        // Assuming `selectedPairs` contains the indexes of selected pairs,\n        // and `processedImageInfo.blobs` contains the blobs data\n        try {\n            const response = await axios.post('/process-selected-pairs', {\n                directoryPath,\n                selectedPairs,\n                blobs: processedImageInfo.blobs,\n                mergedTexts: processedImageInfo.mergedTexts, \n                labelVariations, // Send label variations to the backend\n\n            });\n            console.log(response.data); // Handle response as needed\n            fetchProgress();\n\n        } catch (error) {\n            console.error(\"Error sending selections:\", error);\n            setIsProcessing(false);\n\n        }\n    };\n    \n\n    useEffect(() => {\n        if (progress.completed && directoryPath) {\n            const queryParams = new URLSearchParams({ directory: directoryPath });\n            axios.get(`/get-processed-info?${queryParams}`).then((response) => {\n                setProcessedData(response.data);\n            });\n        }\n    }, [progress.completed, directoryPath]);\n    \n    \n      // Dynamically generate columns from processedData\n      const columns = React.useMemo(() => {\n        if (processedData.length > 0) {\n            let cols = Object.keys(processedData[0]).map(key => ({\n              Header: key.charAt(0).toUpperCase() + key.slice(1),\n              accessor: key,\n            }));\n        \n            // Find the 'File URL' column\n            const urlColumn = cols.find(c => c.accessor === 'File URL');\n            // Filter out the 'File URL' column from the original columns\n            cols = cols.filter(c => c.accessor !== 'File URL');\n            // Add the 'File URL' column at the end\n            cols.push(urlColumn);\n            \n            return cols;\n          }\n          return [];\n      }, [processedData]);\n\n      const fetchAnnouncementsForToday = async () => {\n        alert('Fetching announcements for today...');\n        try {\n            const response = await axios.post('/fetch-todays-announcements', {\n                companies: companies,\n                downloadDir: downloadDirectory // Sending download directory to the backend\n            });\n            setAnnouncements(response.data); // Assuming the endpoint returns the list of announcements\n            console.log(\"Fetched Announcements:\", announcements);\n        } catch (error) {\n            console.error(\"Error fetching announcements:\", error);\n        }\n    };\n\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <header>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/booking\">Staff Booking</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1>Potato Audit</h1>\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={\n                        <>\n \n                        <UploadForm />\n                        <FetchAnnouncementsForm />\n\n                        {/* Text area for entering multiple companies */}\n                        <div>\n                            <textarea\n                                value={companies}\n                                onChange={(e) => setCompanies(e.target.value)}\n                                placeholder=\"Enter companies separated by comma\"\n                                rows=\"4\" // Makes the textarea bigger\n                                style={{ width: '100%', margin: '10px 0' }} // Ensures the textarea is fully visible and comfortably spaced\n                            ></textarea>\n                        </div>\n\n                        {/* Input for specifying download directory */}\n                        <div>\n                            <input\n                                type=\"text\"\n                                value={downloadDirectory}\n                                onChange={(e) => setDownloadDirectory(e.target.value)}\n                                placeholder=\"Enter download directory path\"\n                                style={{ width: '100%', margin: '10px 0' }} // Ensures the input is fully visible and comfortably spaced\n                            />\n                            <button onClick={fetchAnnouncementsForToday}>Fetch Today's Announcements</button>\n                        </div>\n\n                        {/* KAM Download Directory Input */}\n                        <div>\n                            <input\n                                type=\"text\"\n                                value={downloadKAMDirectory}\n                                onChange={(e) => setDownloadKAMDirectory(e.target.value)}\n                                placeholder=\"Enter download directory path\"\n                            />\n                            <button onClick={handleFetchProcessReports}>Fetch and Process KAM Reports</button>\n                        </div>\n\n                        <DirectoryInputForm onDirectorySubmit={handleDirectorySubmit} />\n\n                        <div className=\"invoice-image-container\">\n                            {processedImageInfo.filename && (\n                                <InteractiveAnnotatedImage\n                                    imagePath={`/processed-images/${processedImageInfo.filename}`}\n                                    blobs={processedImageInfo.blobs}\n                                    mergedTexts={processedImageInfo.mergedTexts}\n                                    onSelectionComplete={setSelectedPairs}\n                                    onLabelVariationsUpdate={setLabelVariations} // Handle label variations\n                                    \n                                />\n                            )}\n                        </div>\n                        \n                        {processedImageInfo.filename && selectedPairs.length > 0 && (\n                        <button onClick={handleProcessSelection}>Process Selections</button>\n                        )}\n\n                        {(progress.current > 0 || progress.completed) && (\n                            <>\n                                <h2>Processing Progress</h2>\n                                <progress value={progress.current} max={progress.total}></progress>\n                                <p>{progress.current} of {progress.total} files processed</p>\n                            </>\n                        )}\n\n                    <div className=\"table-container\">\n                        {progress.completed && (\n                            <DataTable columns={columns} data={processedData} />\n                        )}\n                    </div>\n\n                    </>\n                    } />\n                    <Route path=\"/booking\" element={<StaffBookingSystem />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}