{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [directory, setDirectory] = useState('');\n  const handleFilesChange = event => {\n    setFiles(Array.from(event.target.files));\n  };\n  const handleDirectoryChange = event => {\n    setDirectory(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0 && !directory) return;\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    formData.append('directory', directory);\n    try {\n      const response = await axios.post('/upload-invoices', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Handle success, such as notifying the user or displaying results\n    } catch (error) {\n      console.error(error);\n      // Handle error, such as displaying a message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFilesChange,\n      accept: \".pdf,.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: directory,\n      onChange: handleDirectoryChange,\n      placeholder: \"Invoice Directory Path (optional)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Process Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"vVko78i5awB/JY7x7Khatoojxs8=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","files","setFiles","directory","setDirectory","handleFilesChange","event","Array","from","target","handleDirectoryChange","value","handleSubmit","preventDefault","length","formData","FormData","forEach","file","append","response","post","headers","console","log","data","error","onSubmit","children","type","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [directory, setDirectory] = useState('');\r\n\r\n  const handleFilesChange = (event) => {\r\n    setFiles(Array.from(event.target.files));\r\n  };\r\n\r\n  const handleDirectoryChange = (event) => {\r\n    setDirectory(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (files.length === 0 && !directory) return;\r\n\r\n    const formData = new FormData();\r\n    files.forEach(file => {\r\n      formData.append('files', file);\r\n    });\r\n    formData.append('directory', directory);\r\n\r\n    try {\r\n      const response = await axios.post('/upload-invoices', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      // Handle success, such as notifying the user or displaying results\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error, such as displaying a message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" multiple onChange={handleFilesChange} accept=\".pdf,.png\" />\r\n      <input type=\"text\" value={directory} onChange={handleDirectoryChange} placeholder=\"Invoice Directory Path (optional)\" />\r\n      <button type=\"submit\">Process Invoices</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,QAAQ,CAACK,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACR,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMS,qBAAqB,GAAIJ,KAAK,IAAK;IACvCF,YAAY,CAACE,KAAK,CAACG,MAAM,CAACE,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAON,KAAK,IAAK;IACpCA,KAAK,CAACO,cAAc,CAAC,CAAC;IACtB,IAAIZ,KAAK,CAACa,MAAM,KAAK,CAAC,IAAI,CAACX,SAAS,EAAE;IAEtC,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/Bf,KAAK,CAACgB,OAAO,CAACC,IAAI,IAAI;MACpBH,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAChC,CAAC,CAAC;IACFH,QAAQ,CAACI,MAAM,CAAC,WAAW,EAAEhB,SAAS,CAAC;IAEvC,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,kBAAkB,EAAEN,QAAQ,EAAE;QAC9DO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EAED,oBACE5B,OAAA;IAAM6B,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBAC3B9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACC,QAAQ,EAAE1B,iBAAkB;MAAC2B,MAAM,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EtC,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAAClB,KAAK,EAAER,SAAU;MAAC4B,QAAQ,EAAErB,qBAAsB;MAAC2B,WAAW,EAAC;IAAmC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxHtC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX,CAAC;AAACpC,EAAA,CA3CID,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}