{"ast":null,"code":"var _jsxFileName = \"/Users/msy/Desktop/Shiyao/repo/potato-audit/src/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [downloadDirectory, setDownloadDirectory] = useState('');\n  const handleFilesChange = event => {\n    setFiles(Array.from(event.target.files));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0) return;\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    formData.append('downloadDirectory', downloadDirectory);\n    try {\n      const response = await axios.post('/upload-docs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Great! Files have been processed and saved to the specified directory.');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to process documents.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFilesChange,\n      accept: \".pdf,.png,.jpg,.jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: downloadDirectory,\n      onChange: e => setDownloadDirectory(e.target.value),\n      placeholder: \"Enter download directory path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Process Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"gVO3auLwqBWaNlhE+MPe0jBAelM=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","files","setFiles","downloadDirectory","setDownloadDirectory","handleFilesChange","event","Array","from","target","handleSubmit","preventDefault","length","formData","FormData","forEach","file","append","response","post","headers","alert","error","console","onSubmit","children","type","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","value","e","placeholder","_c","$RefreshReg$"],"sources":["/Users/msy/Desktop/Shiyao/repo/potato-audit/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadForm = () => {\n    const [files, setFiles] = useState([]);\n    const [downloadDirectory, setDownloadDirectory] = useState('');\n\n    const handleFilesChange = (event) => {\n        setFiles(Array.from(event.target.files));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (files.length === 0) return;\n\n        const formData = new FormData();\n        files.forEach(file => {\n            formData.append('files', file);\n        });\n        formData.append('downloadDirectory', downloadDirectory);\n\n        try {\n            const response = await axios.post('/upload-docs', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            alert('Great! Files have been processed and saved to the specified directory.');\n        } catch (error) {\n            console.error(error);\n            alert('Failed to process documents.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"file\" multiple onChange={handleFilesChange} accept=\".pdf,.png,.jpg,.jpeg\" />\n            <input\n                type=\"text\"\n                value={downloadDirectory}\n                onChange={e => setDownloadDirectory(e.target.value)}\n                placeholder=\"Enter download directory path\"\n            />\n            <button type=\"submit\">Process Documents</button>\n        </form>\n    );\n};\n\nexport default UploadForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,QAAQ,CAACK,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACR,KAAK,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,IAAIV,KAAK,CAACW,MAAM,KAAK,CAAC,EAAE;IAExB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/Bb,KAAK,CAACc,OAAO,CAACC,IAAI,IAAI;MAClBH,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAClC,CAAC,CAAC;IACFH,QAAQ,CAACI,MAAM,CAAC,mBAAmB,EAAEd,iBAAiB,CAAC;IAEvD,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,cAAc,EAAEN,QAAQ,EAAE;QACxDO,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFC,KAAK,CAAC,wEAAwE,CAAC;IACnF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAM0B,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBACzB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACC,QAAQ,EAAEvB,iBAAkB;MAACwB,MAAM,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzFnC,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXQ,KAAK,EAAE/B,iBAAkB;MACzByB,QAAQ,EAAEO,CAAC,IAAI/B,oBAAoB,CAAC+B,CAAC,CAAC1B,MAAM,CAACyB,KAAK,CAAE;MACpDE,WAAW,EAAC;IAA+B;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFnC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEf,CAAC;AAACjC,EAAA,CA3CID,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}