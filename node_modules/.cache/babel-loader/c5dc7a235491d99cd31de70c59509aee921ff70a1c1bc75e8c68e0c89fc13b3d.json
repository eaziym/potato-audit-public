{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\InteractiveAnnotatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractiveAnnotatedImage({\n  imagePath,\n  blobs\n}) {\n  _s();\n  const imageRef = useRef(null);\n  const [scaleFactor, setScaleFactor] = useState(1);\n  const [selectedBoxIndex, setSelectedBoxIndex] = useState(null); // To track the selected box\n\n  useEffect(() => {\n    const updateScaleFactor = () => {\n      if (imageRef.current) {\n        const displayWidth = imageRef.current.offsetWidth;\n        const naturalWidth = imageRef.current.naturalWidth;\n        const newScaleFactor = displayWidth / naturalWidth;\n        setScaleFactor(newScaleFactor);\n      }\n    };\n    window.addEventListener('resize', updateScaleFactor);\n    return () => window.removeEventListener('resize', updateScaleFactor);\n  }, []);\n  const handleImageLoad = () => {\n    if (imageRef.current) {\n      const displayWidth = imageRef.current.offsetWidth;\n      const naturalWidth = imageRef.current.naturalWidth;\n      const newScaleFactor = displayWidth / naturalWidth;\n      setScaleFactor(newScaleFactor);\n    }\n  };\n  const handleBoxClick = index => {\n    setSelectedBoxIndex(index); // Update state to mark this box as selected\n    console.log(`Box ${index} clicked`);\n    // Here, you can handle further actions based on box selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: imagePath,\n      alt: \"Annotated Invoice\",\n      onLoad: handleImageLoad,\n      style: {\n        maxWidth: '100%',\n        display: 'block'\n      } // Ensure image scales down with its container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      },\n      children: blobs.map((blob, index) => {\n        const {\n          x,\n          y,\n          width,\n          height\n        } = blob.coordinates;\n        const scaledX = x * scaleFactor;\n        const scaledY = y * scaleFactor;\n        const scaledWidth = width * scaleFactor;\n        const scaledHeight = height * scaleFactor;\n        return /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: scaledX,\n          y: scaledY,\n          width: scaledWidth,\n          height: scaledHeight,\n          fill: \"none\",\n          stroke: index === selectedBoxIndex ? \"blue\" : \"red\" // Highlight selected box\n          ,\n          strokeWidth: \"2\",\n          pointerEvents: \"all\",\n          onClick: () => handleBoxClick(index),\n          style: {\n            cursor: 'pointer'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(InteractiveAnnotatedImage, \"mEErToF5h7Epg+16Zyulw/rGqF4=\");\n_c = InteractiveAnnotatedImage;\nexport default InteractiveAnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"InteractiveAnnotatedImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","InteractiveAnnotatedImage","imagePath","blobs","_s","imageRef","scaleFactor","setScaleFactor","selectedBoxIndex","setSelectedBoxIndex","updateScaleFactor","current","displayWidth","offsetWidth","naturalWidth","newScaleFactor","window","addEventListener","removeEventListener","handleImageLoad","handleBoxClick","index","console","log","style","position","display","children","ref","src","alt","onLoad","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","top","left","width","height","pointerEvents","map","blob","x","y","coordinates","scaledX","scaledY","scaledWidth","scaledHeight","fill","stroke","strokeWidth","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/InteractiveAnnotatedImage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nfunction InteractiveAnnotatedImage({ imagePath, blobs }) {\r\n    const imageRef = useRef(null);\r\n    const [scaleFactor, setScaleFactor] = useState(1);\r\n    const [selectedBoxIndex, setSelectedBoxIndex] = useState(null); // To track the selected box\r\n\r\n    useEffect(() => {\r\n        const updateScaleFactor = () => {\r\n            if (imageRef.current) {\r\n                const displayWidth = imageRef.current.offsetWidth;\r\n                const naturalWidth = imageRef.current.naturalWidth;\r\n                const newScaleFactor = displayWidth / naturalWidth;\r\n                setScaleFactor(newScaleFactor);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('resize', updateScaleFactor);\r\n        return () => window.removeEventListener('resize', updateScaleFactor);\r\n    }, []);\r\n\r\n    const handleImageLoad = () => {\r\n        if (imageRef.current) {\r\n            const displayWidth = imageRef.current.offsetWidth;\r\n            const naturalWidth = imageRef.current.naturalWidth;\r\n            const newScaleFactor = displayWidth / naturalWidth;\r\n            setScaleFactor(newScaleFactor);\r\n        }\r\n    };\r\n\r\n    const handleBoxClick = (index) => {\r\n        setSelectedBoxIndex(index); // Update state to mark this box as selected\r\n        console.log(`Box ${index} clicked`);\r\n        // Here, you can handle further actions based on box selection\r\n    };\r\n\r\n    return (\r\n        <div style={{ position: 'relative', display: 'inline-block' }}>\r\n            <img\r\n                ref={imageRef}\r\n                src={imagePath}\r\n                alt=\"Annotated Invoice\"\r\n                onLoad={handleImageLoad}\r\n                style={{ maxWidth: '100%', display: 'block' }} // Ensure image scales down with its container\r\n            />\r\n            <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none' }}>\r\n                {blobs.map((blob, index) => {\r\n                    const { x, y, width, height } = blob.coordinates;\r\n                    const scaledX = x * scaleFactor;\r\n                    const scaledY = y * scaleFactor;\r\n                    const scaledWidth = width * scaleFactor;\r\n                    const scaledHeight = height * scaleFactor;\r\n                    return (\r\n                        <rect\r\n                            key={index}\r\n                            x={scaledX}\r\n                            y={scaledY}\r\n                            width={scaledWidth}\r\n                            height={scaledHeight}\r\n                            fill=\"none\"\r\n                            stroke={index === selectedBoxIndex ? \"blue\" : \"red\"} // Highlight selected box\r\n                            strokeWidth=\"2\"\r\n                            pointerEvents=\"all\"\r\n                            onClick={() => handleBoxClick(index)}\r\n                            style={{ cursor: 'pointer' }}\r\n                        />\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InteractiveAnnotatedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}