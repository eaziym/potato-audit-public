{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=()=>{const[files,setFiles]=useState([]);const[downloadDirectory,setDownloadDirectory]=useState('');const handleFilesChange=event=>{setFiles(Array.from(event.target.files));};const handleSubmit=async event=>{event.preventDefault();if(files.length===0)return;const formData=new FormData();files.forEach(file=>{formData.append('files',file);});formData.append('downloadDirectory',downloadDirectory);try{const response=await axios.post('/upload-docs',formData,{headers:{'Content-Type':'multipart/form-data'}});alert('Great! Files have been processed and saved to the specified directory.');}catch(error){console.error(error);alert('Failed to process documents.');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,onChange:handleFilesChange,accept:\".pdf,.png,.jpg,.jpeg\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:downloadDirectory,onChange:e=>setDownloadDirectory(e.target.value),placeholder:\"Enter download directory path\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Process Documents\"})]});};export default UploadForm;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","UploadForm","files","setFiles","downloadDirectory","setDownloadDirectory","handleFilesChange","event","Array","from","target","handleSubmit","preventDefault","length","formData","FormData","forEach","file","append","response","post","headers","alert","error","console","onSubmit","children","type","multiple","onChange","accept","value","e","placeholder"],"sources":["/Users/msy/Desktop/Shiyao/repo/potato-audit/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadForm = () => {\n    const [files, setFiles] = useState([]);\n    const [downloadDirectory, setDownloadDirectory] = useState('');\n\n    const handleFilesChange = (event) => {\n        setFiles(Array.from(event.target.files));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (files.length === 0) return;\n\n        const formData = new FormData();\n        files.forEach(file => {\n            formData.append('files', file);\n        });\n        formData.append('downloadDirectory', downloadDirectory);\n\n        try {\n            const response = await axios.post('/upload-docs', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            alert('Great! Files have been processed and saved to the specified directory.');\n        } catch (error) {\n            console.error(error);\n            alert('Failed to process documents.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"file\" multiple onChange={handleFilesChange} accept=\".pdf,.png,.jpg,.jpeg\" />\n            <input\n                type=\"text\"\n                value={downloadDirectory}\n                onChange={e => setDownloadDirectory(e.target.value)}\n                placeholder=\"Enter download directory path\"\n            />\n            <button type=\"submit\">Process Documents</button>\n        </form>\n    );\n};\n\nexport default UploadForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE9D,KAAM,CAAAW,iBAAiB,CAAIC,KAAK,EAAK,CACjCJ,QAAQ,CAACK,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACR,KAAK,CAAC,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAS,YAAY,CAAG,KAAO,CAAAJ,KAAK,EAAK,CAClCA,KAAK,CAACK,cAAc,CAAC,CAAC,CACtB,GAAIV,KAAK,CAACW,MAAM,GAAK,CAAC,CAAE,OAExB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/Bb,KAAK,CAACc,OAAO,CAACC,IAAI,EAAI,CAClBH,QAAQ,CAACI,MAAM,CAAC,OAAO,CAAED,IAAI,CAAC,CAClC,CAAC,CAAC,CACFH,QAAQ,CAACI,MAAM,CAAC,mBAAmB,CAAEd,iBAAiB,CAAC,CAEvD,GAAI,CACA,KAAM,CAAAe,QAAQ,CAAG,KAAM,CAAAvB,KAAK,CAACwB,IAAI,CAAC,cAAc,CAAEN,QAAQ,CAAE,CACxDO,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CACFC,KAAK,CAAC,wEAAwE,CAAC,CACnF,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpBD,KAAK,CAAC,8BAA8B,CAAC,CACzC,CACJ,CAAC,CAED,mBACItB,KAAA,SAAMyB,QAAQ,CAAEd,YAAa,CAAAe,QAAA,eACzB5B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACC,QAAQ,MAACC,QAAQ,CAAEvB,iBAAkB,CAACwB,MAAM,CAAC,sBAAsB,CAAE,CAAC,cACzFhC,IAAA,UACI6B,IAAI,CAAC,MAAM,CACXI,KAAK,CAAE3B,iBAAkB,CACzByB,QAAQ,CAAEG,CAAC,EAAI3B,oBAAoB,CAAC2B,CAAC,CAACtB,MAAM,CAACqB,KAAK,CAAE,CACpDE,WAAW,CAAC,+BAA+B,CAC9C,CAAC,cACFnC,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EAC9C,CAAC,CAEf,CAAC,CAED,cAAe,CAAAzB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}