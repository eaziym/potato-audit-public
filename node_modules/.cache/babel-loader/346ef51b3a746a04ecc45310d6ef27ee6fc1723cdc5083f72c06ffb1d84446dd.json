{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\audit-software-frontend\\\\src\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleFilesChange = event => {\n    setFiles(Array.from(event.target.files));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0) return;\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    try {\n      const response = await axios.post('/upload-invoices', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Handle success, such as notifying the user or displaying results\n    } catch (error) {\n      console.error(error);\n      // Handle error, such as displaying a message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFilesChange,\n      accept: \".pdf,.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","files","setFiles","handleFilesChange","event","Array","from","target","handleSubmit","preventDefault","length","formData","FormData","forEach","file","append","response","post","headers","console","log","data","error","onSubmit","children","type","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jason/audit-software-frontend/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const handleFilesChange = (event) => {\r\n        setFiles(Array.from(event.target.files));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (files.length === 0) return;\r\n\r\n        const formData = new FormData();\r\n        files.forEach(file => {\r\n            formData.append('files', file);\r\n        });\r\n\r\n        try {\r\n            const response = await axios.post('/upload-invoices', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            console.log(response.data);\r\n            // Handle success, such as notifying the user or displaying results\r\n        } catch (error) {\r\n            console.error(error);\r\n            // Handle error, such as displaying a message to the user\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"file\" multiple onChange={handleFilesChange} accept=\".pdf,.png\" />\r\n            <button type=\"submit\">Upload Invoices</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,QAAQ,CAACG,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMO,YAAY,GAAG,MAAOJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,IAAIR,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;IAExB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BX,KAAK,CAACY,OAAO,CAACC,IAAI,IAAI;MAClBH,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAClC,CAAC,CAAC;IAEF,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,kBAAkB,EAAEN,QAAQ,EAAE;QAC5DO,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpB;IACJ;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAMyB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACzB1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACC,QAAQ,EAAExB,iBAAkB;MAACyB,MAAM,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9ElC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf,CAAC;AAAChC,EAAA,CApCID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}